2020-03-27 23:17:30,167 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-27 23:17:32,135 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-27 23:17:32,305 -- [test_login.py-->line:51] - ERROR: 用例--用户名为空--执行未通过
2020-03-27 23:17:32,305 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-27 23:17:32,305 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-27 23:17:32,305 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-27 23:17:32,696 -- [test_login.py-->line:51] - ERROR: 用例--密码为空--执行未通过
2020-03-27 23:17:32,697 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-27 23:17:32,697 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-27 23:17:32,697 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-27 23:17:32,892 -- [test_login.py-->line:58] - INFO: 用例--用户名不存在--执行通过
2020-03-27 23:17:33,226 -- [test_login.py-->line:58] - INFO: 用例--密码错误--执行通过
2020-03-27 23:17:34,141 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-27 23:17:34,631 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-27 23:17:35,107 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-27 23:17:35,539 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-27 23:17:36,110 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-27 23:17:36,548 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-27 23:17:36,654 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-27 23:17:36,769 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-27 23:17:36,888 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-27 23:17:37,003 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-27 23:17:37,119 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-27 23:17:37,246 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-27 23:17:37,412 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-27 23:17:37,437 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:12:47,462 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:12:49,849 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:12:50,055 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:12:50,055 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:12:50,055 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:12:50,055 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:12:50,258 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:12:50,258 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:12:50,258 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:12:50,258 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:12:50,770 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:12:51,216 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:12:53,033 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:12:54,456 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:12:56,005 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:12:57,263 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:12:58,568 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:12:59,780 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:13:00,195 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:13:00,456 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:13:01,215 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:13:01,520 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:13:01,745 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:13:01,935 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:13:02,167 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:13:02,298 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:13:49,808 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:13:52,159 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:13:52,324 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:13:52,324 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:13:52,324 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:13:52,324 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:13:52,459 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:13:52,459 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:13:52,459 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:13:52,459 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:13:52,735 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:13:53,012 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:13:53,958 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:13:54,738 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:13:55,465 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:13:56,190 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:13:56,923 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:13:57,649 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:13:57,787 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:13:58,004 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:13:58,253 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:13:58,455 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:13:58,604 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:13:58,843 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:13:59,276 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:13:59,312 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:16:40,820 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:16:43,936 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:16:44,445 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:16:44,446 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:16:44,446 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:16:44,446 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:16:44,854 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:16:44,855 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:16:44,855 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:16:44,855 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:16:45,275 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:16:45,700 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:16:46,810 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:16:48,155 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:16:49,785 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:16:50,809 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:16:51,944 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:16:53,391 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:16:53,765 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:16:54,070 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:16:54,481 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:16:54,638 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:16:54,892 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:16:55,096 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:16:55,505 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:16:55,544 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:19:06,805 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:19:08,830 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:19:09,034 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:19:09,035 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:19:09,035 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:19:09,035 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:19:09,207 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:19:09,207 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:19:09,207 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:19:09,207 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:19:09,527 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:19:09,854 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:19:10,773 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:19:11,667 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:19:12,421 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:19:13,153 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:19:14,048 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:19:14,948 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:19:15,179 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:19:15,382 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:19:15,588 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:19:15,724 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:19:15,881 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:19:16,003 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:19:16,277 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:19:16,317 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:21:24,871 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:21:26,863 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:21:27,070 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:21:27,070 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:21:27,070 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:21:27,071 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:21:27,376 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:21:27,376 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:21:27,376 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:21:27,377 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:21:27,683 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:21:28,093 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:21:28,911 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:21:29,872 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:21:30,623 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:21:31,354 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:21:32,170 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:21:33,110 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:21:33,313 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:21:33,521 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:21:33,709 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:21:33,847 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:21:34,010 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:21:34,149 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:21:34,410 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:21:34,467 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:27:50,369 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:27:52,624 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:27:52,909 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:27:52,909 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:27:52,909 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:27:52,909 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:27:53,117 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:27:53,117 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:27:53,117 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:27:53,117 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:27:53,423 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:27:53,731 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:27:54,651 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:27:55,674 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:27:56,694 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:27:57,463 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:27:58,441 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:27:59,466 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:27:59,763 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:27:59,909 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:28:00,070 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:28:00,204 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:28:00,358 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:28:00,498 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:28:00,809 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:28:00,855 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:44:26,916 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:44:29,293 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:44:29,770 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:44:29,770 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:44:29,771 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:44:29,771 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:44:30,180 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:44:30,180 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:44:30,181 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:44:30,181 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:44:30,694 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:44:31,205 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:44:32,401 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:44:33,446 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:44:34,714 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:44:36,223 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:44:37,553 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:44:39,602 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:44:39,807 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:44:40,011 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:44:40,319 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:44:40,627 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:44:40,933 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:44:41,185 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:44:41,449 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:44:41,498 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:51:27,667 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:51:29,816 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:51:30,019 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:51:30,019 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:51:30,019 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:51:30,019 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:51:30,326 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:51:30,326 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:51:30,326 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:51:30,326 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:51:30,634 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:51:30,941 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:51:32,250 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:51:33,002 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:51:33,750 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:51:34,934 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:51:35,753 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:51:36,545 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:51:36,700 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:51:36,846 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:51:36,983 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:51:37,144 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:51:37,633 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:51:38,519 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:51:38,927 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:51:38,981 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 21:53:19,047 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 21:53:23,477 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 21:53:23,787 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 21:53:23,787 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 21:53:23,787 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:53:23,787 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:53:23,989 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 21:53:23,989 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 21:53:23,989 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 21:53:23,989 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 21:53:24,398 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 21:53:24,708 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 21:53:25,937 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 21:53:26,700 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 21:53:27,441 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 21:53:28,189 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 21:53:29,108 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 21:53:30,213 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 21:53:30,462 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 21:53:30,614 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 21:53:30,754 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 21:53:30,886 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 21:53:31,027 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 21:53:31,168 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 21:53:31,457 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 21:53:31,502 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 22:03:34,077 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 22:03:36,545 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 22:03:36,748 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 22:03:36,748 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 22:03:36,748 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:36,748 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:03:36,907 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 22:03:36,907 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 22:03:36,907 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:36,908 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:03:37,364 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 22:03:37,774 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 22:03:38,491 -- [test_recharge.py-->line:72] - INFO: 用例--充值成功-整数--执行通过
2020-03-29 22:03:38,797 -- [test_recharge.py-->line:72] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-29 22:03:39,003 -- [test_recharge.py-->line:72] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-29 22:03:39,206 -- [test_recharge.py-->line:72] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-29 22:03:39,412 -- [test_recharge.py-->line:72] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-29 22:03:39,616 -- [test_recharge.py-->line:72] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-29 22:03:39,820 -- [test_recharge.py-->line:65] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-29 22:03:39,821 -- [test_recharge.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-29 22:03:39,821 -- [test_recharge.py-->line:67] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 510401.26, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:39,821 -- [test_recharge.py-->line:69] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:03:40,026 -- [test_recharge.py-->line:65] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-29 22:03:40,026 -- [test_recharge.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:03:40,027 -- [test_recharge.py-->line:67] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 510401.26, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:40,027 -- [test_recharge.py-->line:69] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 61, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:03:40,315 -- [test_recharge.py-->line:65] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-29 22:03:40,315 -- [test_recharge.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:03:40,315 -- [test_recharge.py-->line:67] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:40,315 -- [test_recharge.py-->line:69] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:03:40,468 -- [test_recharge.py-->line:65] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-29 22:03:40,468 -- [test_recharge.py-->line:66] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-29 22:03:40,469 -- [test_recharge.py-->line:67] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:40,469 -- [test_recharge.py-->line:69] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-29 22:03:40,598 -- [test_recharge.py-->line:65] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-29 22:03:40,599 -- [test_recharge.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-29 22:03:40,599 -- [test_recharge.py-->line:67] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:40,599 -- [test_recharge.py-->line:69] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-29 22:03:40,752 -- [test_recharge.py-->line:65] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-29 22:03:40,752 -- [test_recharge.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:03:40,752 -- [test_recharge.py-->line:67] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:03:40,752 -- [test_recharge.py-->line:69] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 62, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:03:40,892 -- [test_recharge.py-->line:72] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-29 22:03:41,620 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 22:03:42,377 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 22:03:43,157 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 22:03:43,911 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 22:03:44,668 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 22:03:45,390 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 22:03:45,535 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 22:03:45,665 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 22:03:45,807 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 22:03:45,944 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 22:03:46,114 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 22:03:46,248 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 22:03:46,579 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 22:03:46,620 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 22:05:58,492 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 22:06:00,928 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 22:06:01,081 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 22:06:01,082 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 22:06:01,082 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:01,082 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:06:01,339 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 22:06:01,339 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 22:06:01,339 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:01,339 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:06:01,646 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 22:06:01,953 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 22:06:02,464 -- [test_recharge.py-->line:74] - INFO: 用例--充值成功-整数--执行通过
2020-03-29 22:06:02,670 -- [test_recharge.py-->line:74] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-29 22:06:02,875 -- [test_recharge.py-->line:74] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-29 22:06:03,077 -- [test_recharge.py-->line:74] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-29 22:06:03,284 -- [test_recharge.py-->line:74] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-29 22:06:03,592 -- [test_recharge.py-->line:74] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-29 22:06:03,794 -- [test_recharge.py-->line:67] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-29 22:06:03,794 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-29 22:06:03,794 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1010802.52, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:03,794 -- [test_recharge.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 63, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:06:03,999 -- [test_recharge.py-->line:67] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-29 22:06:03,999 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:06:03,999 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1010802.52, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:03,999 -- [test_recharge.py-->line:71] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 63, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:06:04,204 -- [test_recharge.py-->line:67] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-29 22:06:04,204 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:06:04,204 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:04,204 -- [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:06:04,364 -- [test_recharge.py-->line:67] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-29 22:06:04,364 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-29 22:06:04,364 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:04,364 -- [test_recharge.py-->line:71] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-29 22:06:04,500 -- [test_recharge.py-->line:67] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-29 22:06:04,500 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-29 22:06:04,500 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:04,500 -- [test_recharge.py-->line:71] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-29 22:06:04,634 -- [test_recharge.py-->line:67] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-29 22:06:04,634 -- [test_recharge.py-->line:68] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:06:04,634 -- [test_recharge.py-->line:69] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:06:04,634 -- [test_recharge.py-->line:71] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 64, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:06:04,769 -- [test_recharge.py-->line:74] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-29 22:06:05,500 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 22:06:06,457 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 22:06:07,276 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 22:06:08,198 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 22:06:09,076 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 22:06:10,028 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 22:06:10,304 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 22:06:10,656 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 22:06:10,860 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 22:06:11,169 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 22:06:11,373 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 22:06:11,679 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 22:06:11,986 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 22:06:12,026 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 22:29:47,579 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 22:29:51,349 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 22:29:51,758 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 22:29:51,758 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 22:29:51,758 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:29:51,758 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:29:52,067 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 22:29:52,067 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 22:29:52,068 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:29:52,068 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:29:52,385 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 22:29:53,397 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 22:29:57,287 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-29 22:29:57,595 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-29 22:29:57,799 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-29 22:29:57,800 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-29 22:29:57,800 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1010902.52, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:29:57,800 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:30:01,078 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-29 22:30:01,078 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:30:01,078 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1010902.52, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:30:01,078 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:30:01,282 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-29 22:30:01,282 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:30:01,283 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:30:01,283 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:30:01,534 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-29 22:30:01,534 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-29 22:30:01,534 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:30:01,535 -- [test_recharge.py-->line:91] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-29 22:30:01,796 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-29 22:30:01,796 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-29 22:30:01,796 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:30:01,797 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-29 22:30:02,100 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-29 22:30:02,101 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:30:02,101 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:30:02,101 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:30:02,306 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-29 22:30:06,298 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 22:30:10,804 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 22:30:13,772 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 22:30:17,972 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 22:30:22,374 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 22:30:26,881 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 22:30:27,188 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 22:30:27,496 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 22:30:27,702 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 22:30:28,008 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 22:30:28,315 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 22:30:28,519 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 22:30:30,683 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 22:30:30,720 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 22:40:16,684 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 22:40:19,469 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 22:40:19,774 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 22:40:19,775 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 22:40:19,775 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:19,775 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:40:19,964 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 22:40:19,964 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 22:40:19,964 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:19,965 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:40:20,287 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 22:40:20,698 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 22:40:21,265 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-整数--执行通过
2020-03-29 22:40:21,588 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-29 22:40:21,889 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-29 22:40:22,225 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-29 22:40:22,357 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-29 22:40:22,489 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-29 22:40:22,634 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-29 22:40:22,634 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-29 22:40:22,634 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1511303.78, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:22,634 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:40:22,768 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-29 22:40:22,768 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:40:22,768 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1511303.78, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:22,768 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:40:22,903 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-29 22:40:22,903 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:40:22,903 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:22,903 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:40:23,028 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-29 22:40:23,028 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-29 22:40:23,028 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:23,028 -- [test_recharge.py-->line:91] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-29 22:40:23,177 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-29 22:40:23,177 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-29 22:40:23,177 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:23,177 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-29 22:40:23,309 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-29 22:40:23,309 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:40:23,309 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:40:23,310 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:40:23,446 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-29 22:40:24,169 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 22:40:24,997 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 22:40:26,022 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 22:40:27,017 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 22:40:27,735 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 22:40:28,467 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 22:40:28,606 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 22:40:28,744 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 22:40:28,873 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 22:40:29,094 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 22:40:29,299 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 22:40:29,500 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 22:40:29,911 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 22:40:29,951 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-29 22:48:10,238 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-29 22:48:12,656 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-29 22:48:12,962 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-29 22:48:12,962 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-29 22:48:12,962 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:12,963 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:48:13,273 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-29 22:48:13,273 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-29 22:48:13,274 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:13,274 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-29 22:48:13,577 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-29 22:48:13,989 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-29 22:48:14,807 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-整数--执行通过
2020-03-29 22:48:15,190 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-29 22:48:15,532 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-29 22:48:15,861 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-29 22:48:15,991 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-29 22:48:16,126 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-29 22:48:16,276 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-29 22:48:16,276 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-29 22:48:16,276 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 2011705.04, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:16,276 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:48:16,423 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-29 22:48:16,423 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:48:16,424 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 2011705.04, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:16,424 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-29 22:48:16,642 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-29 22:48:16,643 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:48:16,643 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:16,643 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:48:16,797 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-29 22:48:16,797 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-29 22:48:16,797 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:16,797 -- [test_recharge.py-->line:91] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-29 22:48:16,952 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-29 22:48:16,952 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-29 22:48:16,952 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:16,953 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-29 22:48:17,089 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-29 22:48:17,090 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-29 22:48:17,090 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-29 22:48:17,090 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-29 22:48:17,228 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-29 22:48:17,979 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-29 22:48:18,741 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-29 22:48:19,494 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-29 22:48:20,232 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-29 22:48:20,963 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-29 22:48:21,974 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-29 22:48:22,262 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-29 22:48:22,488 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-29 22:48:22,792 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-29 22:48:22,996 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-29 22:48:23,134 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-29 22:48:23,260 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-29 22:48:23,530 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-29 22:48:23,572 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 03:08:11,480 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:08:13,999 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:08:14,133 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:08:14,134 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:08:14,134 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:14,135 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:08:14,374 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:08:14,374 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:08:14,374 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:14,375 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:08:14,679 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:08:14,988 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:08:15,806 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:08:16,317 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:08:16,932 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:08:17,385 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:08:17,490 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:08:17,590 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:08:17,691 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:08:17,691 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:08:17,691 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 2512106.3, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:17,691 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:08:17,797 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:08:17,797 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:08:17,797 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 2512106.3, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:17,797 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:08:17,896 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:08:17,897 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:08:17,897 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:17,897 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:08:17,995 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:08:17,995 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:08:17,996 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:17,996 -- [test_recharge.py-->line:91] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:08:18,155 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:08:18,156 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:08:18,156 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:18,156 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:08:18,250 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:08:18,250 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:08:18,250 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:08:18,250 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:08:18,346 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:08:19,056 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:08:19,754 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:08:20,460 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:08:21,155 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:08:21,949 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:08:22,700 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:08:22,872 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:08:23,077 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:08:23,281 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:08:23,424 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:08:23,527 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:08:23,638 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:08:23,831 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:08:23,858 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 03:09:04,001 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:09:06,187 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:09:06,390 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:09:06,390 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:09:06,390 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:06,391 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:09:06,595 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:09:06,595 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:09:06,595 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:06,595 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:09:07,006 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:09:07,396 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:09:07,944 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:09:08,250 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:09:08,576 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:09:08,906 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:09:09,051 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:09:09,196 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:09:09,344 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:09:09,344 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:09:09,345 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 3012507.56, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:09,345 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:09:09,492 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:09:09,492 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:09:09,492 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 3012507.56, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:09,493 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:09:09,952 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:09:09,952 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:09:09,952 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:09,953 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:09:10,101 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:09:10,101 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:09:10,101 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:10,102 -- [test_recharge.py-->line:91] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:09:10,252 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:09:10,253 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:09:10,253 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:10,253 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:09:10,381 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:09:10,381 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:09:10,382 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:09:10,382 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:09:10,512 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:09:11,279 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:09:11,985 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:09:12,709 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:09:13,343 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:09:14,086 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:09:15,094 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:09:15,396 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:09:15,518 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:09:15,651 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:09:15,802 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:09:15,955 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:09:16,105 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:09:16,395 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:09:16,431 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 03:10:24,596 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:10:26,981 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:10:27,286 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:10:27,286 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:10:27,286 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:27,287 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:10:27,592 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:10:27,593 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:10:27,593 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:27,593 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:10:27,901 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:10:28,208 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:10:29,231 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:10:29,626 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:10:29,964 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:10:30,326 -- [test_recharge.py-->line:94] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:10:30,467 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:10:30,590 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:10:30,731 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:10:30,731 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:10:30,731 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 3512908.82, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:30,732 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:10:30,875 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:10:30,875 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:10:30,875 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 3512908.82, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:30,875 -- [test_recharge.py-->line:91] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:10:30,999 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:10:30,999 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:10:30,999 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:30,999 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:10:31,138 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:10:31,139 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:10:31,139 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:31,139 -- [test_recharge.py-->line:91] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:10:31,264 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:10:31,264 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:10:31,264 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:31,265 -- [test_recharge.py-->line:91] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:10:31,408 -- [test_recharge.py-->line:87] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:10:31,408 -- [test_recharge.py-->line:88] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:10:31,408 -- [test_recharge.py-->line:89] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:10:31,408 -- [test_recharge.py-->line:91] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:10:31,532 -- [test_recharge.py-->line:94] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:10:32,220 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:10:32,878 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:10:33,737 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:10:34,660 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:10:35,453 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:10:36,200 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:10:36,341 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:10:36,463 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:10:36,597 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:10:36,750 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:10:36,898 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:10:37,042 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:10:37,323 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:10:37,664 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 03:14:40,451 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:14:42,668 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:14:42,880 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:14:42,881 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:14:42,882 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:42,883 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:14:43,183 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:14:43,183 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:14:43,183 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:43,183 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:14:43,463 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:14:43,773 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:14:44,719 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:14:45,332 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:14:45,683 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:14:46,040 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:14:46,218 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:14:46,380 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:14:46,531 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:14:46,532 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:14:46,532 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 4013310.08, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:46,533 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:14:46,697 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:14:46,698 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:14:46,698 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 4013310.08, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:46,698 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:14:46,847 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:14:46,848 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:14:46,848 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:46,848 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:14:47,000 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:14:47,000 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:14:47,001 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:47,001 -- [test_recharge.py-->line:90] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:14:47,195 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:14:47,196 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:14:47,196 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:47,196 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:14:47,373 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:14:47,373 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:14:47,374 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:14:47,374 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:14:47,537 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:14:48,277 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:14:49,041 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:14:49,931 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:14:50,865 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:14:51,757 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:14:52,514 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:14:52,663 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:14:52,817 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:14:52,969 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:14:53,142 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:14:53,296 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:14:53,433 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:14:53,836 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:16:10,075 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:16:11,968 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:16:12,273 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:16:12,274 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:16:12,274 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:12,274 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:16:12,582 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:16:12,583 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:16:12,583 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:12,584 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:16:12,989 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:16:13,400 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:16:14,216 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:16:14,934 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:16:15,549 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:16:15,886 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:16:16,036 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:16:16,205 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:16:16,370 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:16:16,370 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:16:16,370 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 4513711.34, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:16,371 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:16:16,519 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:16:16,520 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:16:16,520 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 4513711.34, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:16,520 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:16:16,708 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:16:16,709 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:16:16,709 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:16,709 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:16:16,872 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:16:16,873 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:16:16,873 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:16,874 -- [test_recharge.py-->line:90] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:16:17,055 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:16:17,056 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:16:17,056 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:17,057 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:16:17,208 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:16:17,209 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:16:17,209 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:16:17,210 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:16:17,385 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:16:18,136 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:16:18,896 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:16:19,646 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:16:20,564 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:16:21,488 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:16:22,222 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:16:22,358 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:16:22,786 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:16:22,934 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:16:23,130 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:16:23,288 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:16:23,444 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:16:23,728 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:18:12,487 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:18:15,154 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:18:15,457 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:18:15,457 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:18:15,458 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:15,458 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:18:15,766 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:18:15,766 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:18:15,766 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:15,766 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:18:16,047 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:18:16,481 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:18:17,198 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:18:17,595 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:18:17,927 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:18:18,262 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:18:18,408 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:18:18,535 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:18:18,664 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:18:18,665 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:18:18,665 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5014112.6, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:18,665 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:18:18,812 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:18:18,812 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:18:18,812 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5014112.6, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:18,812 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:18:18,941 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:18:18,942 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:18:18,942 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:18,942 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:18:19,085 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:18:19,086 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:18:19,086 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:19,086 -- [test_recharge.py-->line:90] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:18:19,213 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:18:19,214 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:18:19,214 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:19,214 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:18:19,353 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:18:19,355 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:18:19,355 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:18:19,355 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:18:19,514 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:18:20,238 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:18:21,035 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:18:21,909 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:18:22,830 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:18:23,721 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:18:24,470 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:18:24,606 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:18:24,748 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:18:24,894 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:18:25,009 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:18:25,201 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:18:25,348 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:18:25,700 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:18:26,165 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 03:21:31,968 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:21:34,523 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:21:34,830 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:21:34,830 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:21:34,830 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:34,831 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:21:35,137 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:21:35,137 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:21:35,137 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:35,138 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:21:35,445 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:21:35,856 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:21:36,674 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:21:37,288 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:21:37,787 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:21:38,105 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:21:38,227 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:21:38,393 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:21:38,618 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:21:38,619 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:21:38,620 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5514513.86, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:38,620 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:21:38,764 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:21:38,765 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:21:38,765 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5514513.86, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:38,765 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:21:38,907 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:21:38,907 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:21:38,908 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:38,908 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:21:39,071 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:21:39,071 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:21:39,072 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:39,072 -- [test_recharge.py-->line:90] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:21:39,207 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:21:39,207 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:21:39,207 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:39,208 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:21:39,356 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:21:39,356 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:21:39,357 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:21:39,357 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:21:39,484 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:21:40,213 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:21:40,908 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:21:41,691 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:21:42,612 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:21:43,533 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:21:44,266 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:21:44,403 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:21:44,544 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:21:44,672 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:21:44,810 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:21:44,938 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:21:45,083 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:21:45,344 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:21:45,891 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-整数--执行通过
2020-03-30 03:21:46,196 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-30 03:21:46,402 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-30 03:21:46,607 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-50万--执行通过
2020-03-30 03:21:46,913 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-会员id为空--执行通过
2020-03-30 03:21:47,220 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-03-30 03:21:47,606 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-03-30 03:21:48,280 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-03-30 03:21:48,336 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 03:27:21,714 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 03:27:24,322 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 03:27:24,627 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 03:27:24,628 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 03:27:24,628 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:24,628 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:27:24,934 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 03:27:24,934 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 03:27:24,935 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:24,935 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 03:27:25,244 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 03:27:25,580 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 03:27:26,879 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 03:27:27,598 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 03:27:27,951 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 03:27:28,281 -- [test_recharge.py-->line:93] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 03:27:28,412 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 03:27:28,549 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 03:27:28,705 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 03:27:28,705 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:27:28,707 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5512514.8, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:28,707 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:27:28,854 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 03:27:28,854 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:27:28,854 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5512514.8, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:28,854 -- [test_recharge.py-->line:90] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:27:28,980 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 03:27:28,980 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:27:28,981 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:28,981 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:27:29,127 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 03:27:29,127 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 03:27:29,127 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:29,128 -- [test_recharge.py-->line:90] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 03:27:29,254 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 03:27:29,255 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 03:27:29,255 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:29,255 -- [test_recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 03:27:29,404 -- [test_recharge.py-->line:86] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 03:27:29,405 -- [test_recharge.py-->line:87] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 03:27:29,405 -- [test_recharge.py-->line:88] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:29,406 -- [test_recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 03:27:29,549 -- [test_recharge.py-->line:93] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 03:27:30,395 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 03:27:31,127 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 03:27:31,897 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 03:27:32,818 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 03:27:33,868 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 03:27:34,628 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 03:27:34,764 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 03:27:34,906 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 03:27:35,056 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 03:27:35,190 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 03:27:35,340 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 03:27:35,486 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 03:27:35,789 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 03:27:36,508 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-整数--执行通过
2020-03-30 03:27:36,713 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-30 03:27:37,018 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-30 03:27:37,325 -- [test_withdraw.py-->line:73] - INFO: 用例--提现成功-50万--执行通过
2020-03-30 03:27:37,632 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-会员id为空--执行通过
2020-03-30 03:27:37,769 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-03-30 03:27:37,928 -- [test_withdraw.py-->line:65] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-03-30 03:27:37,928 -- [test_withdraw.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 03:27:37,928 -- [test_withdraw.py-->line:67] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5010114.48, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:37,929 -- [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:27:38,062 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-03-30 03:27:38,202 -- [test_withdraw.py-->line:65] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-03-30 03:27:38,203 -- [test_withdraw.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 03:27:38,203 -- [test_withdraw.py-->line:67] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 5010114.48, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:38,203 -- [test_withdraw.py-->line:68] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 03:27:38,349 -- [test_withdraw.py-->line:65] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-03-30 03:27:38,349 -- [test_withdraw.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 03:27:38,349 -- [test_withdraw.py-->line:67] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:38,350 -- [test_withdraw.py-->line:68] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-03-30 03:27:38,484 -- [test_withdraw.py-->line:65] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-03-30 03:27:38,484 -- [test_withdraw.py-->line:66] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-03-30 03:27:38,484 -- [test_withdraw.py-->line:67] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:38,484 -- [test_withdraw.py-->line:68] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-03-30 03:27:38,615 -- [test_withdraw.py-->line:65] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-03-30 03:27:38,616 -- [test_withdraw.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-03-30 03:27:38,616 -- [test_withdraw.py-->line:67] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:38,617 -- [test_withdraw.py-->line:68] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-03-30 03:27:38,761 -- [test_withdraw.py-->line:65] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-03-30 03:27:38,762 -- [test_withdraw.py-->line:66] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 03:27:38,762 -- [test_withdraw.py-->line:67] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 03:27:38,762 -- [test_withdraw.py-->line:68] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 61, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-03-30 03:27:38,886 -- [test_withdraw.py-->line:73] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-03-30 03:27:38,939 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 15:41:12,097 -- [test_recharge.py-->line:96] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 15:41:12,813 -- [test_recharge.py-->line:96] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 15:41:13,526 -- [test_recharge.py-->line:96] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 15:41:14,346 -- [test_recharge.py-->line:96] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 15:41:14,553 -- [test_recharge.py-->line:96] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 15:41:14,757 -- [test_recharge.py-->line:96] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 15:41:14,926 -- [test_recharge.py-->line:89] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 15:41:14,926 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 15:41:14,926 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1500402.26, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 15:41:14,926 -- [test_recharge.py-->line:93] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-30 15:41:15,169 -- [test_recharge.py-->line:89] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 15:41:15,170 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 15:41:15,170 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7810156, 'leave_amount': 1500402.26, 'mobile_phone': '18804013025', 'reg_name': '薄咊1', 'reg_time': '2020-03-27 23:17:33.0', 'type': 0}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 15:41:15,170 -- [test_recharge.py-->line:93] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 80, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-30 15:41:15,415 -- [test_recharge.py-->line:89] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 15:41:15,416 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 15:41:15,416 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 15:41:15,416 -- [test_recharge.py-->line:93] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-30 15:41:15,589 -- [test_recharge.py-->line:89] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 15:41:15,589 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 15:41:15,590 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 15:41:15,590 -- [test_recharge.py-->line:93] - ERROR:  :: 充值金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 充值金额为空 != 余额为空
2020-03-30 15:41:15,741 -- [test_recharge.py-->line:89] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 15:41:15,742 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 15:41:15,742 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 15:41:15,742 -- [test_recharge.py-->line:93] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-03-30 15:41:15,896 -- [test_recharge.py-->line:89] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 15:41:15,897 -- [test_recharge.py-->line:90] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 15:41:15,897 -- [test_recharge.py-->line:91] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 15:41:15,898 -- [test_recharge.py-->line:93] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 81, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-30 15:41:16,064 -- [test_recharge.py-->line:96] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 16:09:41,578 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 16:09:46,061 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 16:09:46,367 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 16:09:46,368 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 16:09:46,368 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:46,368 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 16:09:46,777 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 16:09:46,777 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 16:09:46,777 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:46,778 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 16:09:47,188 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 16:09:47,493 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 16:09:48,010 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 16:09:48,344 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 16:09:48,705 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 16:09:49,027 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 16:09:49,152 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 16:09:49,292 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 16:09:49,423 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 16:09:49,423 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 16:09:49,423 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1500402.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:49,423 -- [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:09:49,561 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 16:09:49,561 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 16:09:49,561 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1500402.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:49,562 -- [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:09:49,713 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 16:09:49,713 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 16:09:49,713 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:49,713 -- [test_recharge.py-->line:78] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 16:09:49,851 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 16:09:49,851 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 16:09:49,851 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:49,852 -- [test_recharge.py-->line:78] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 16:09:49,982 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 16:09:49,983 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 16:09:49,983 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:49,983 -- [test_recharge.py-->line:78] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 16:09:50,137 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 16:09:50,137 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 16:09:50,138 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:50,138 -- [test_recharge.py-->line:78] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 16:09:50,281 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 16:09:51,061 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 16:09:51,895 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 16:09:52,819 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 16:09:53,739 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 16:09:54,517 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 16:09:55,295 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 16:09:55,442 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 16:09:55,582 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 16:09:55,716 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 16:09:55,892 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 16:09:56,198 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 16:09:56,504 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 16:09:57,016 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 16:09:57,630 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现成功-整数--执行未通过
2020-03-30 16:09:57,630 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-30 16:09:57,630 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1000402.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:57,631 -- [test_withdraw.py-->line:75] - ERROR: Decimal('500000') != Decimal('-500000.00')
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(recharge_money, end_money - start_money)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('500000') != Decimal('-500000.00')
2020-03-30 16:09:58,067 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现成功-1位小数--执行未通过
2020-03-30 16:09:58,068 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-30 16:09:58,068 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 950402.16, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:58,068 -- [test_withdraw.py-->line:75] - ERROR: Decimal('50000.1') != Decimal('-50000.10')
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(recharge_money, end_money - start_money)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('50000.1') != Decimal('-50000.10')
2020-03-30 16:09:58,406 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现成功-2位小数--执行未通过
2020-03-30 16:09:58,406 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-30 16:09:58,406 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 900401.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:58,406 -- [test_withdraw.py-->line:75] - ERROR: Decimal('50000.22') != Decimal('-50000.22')
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(recharge_money, end_money - start_money)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('50000.22') != Decimal('-50000.22')
2020-03-30 16:09:58,753 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现成功-50万--执行未通过
2020-03-30 16:09:58,753 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-30 16:09:58,753 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 400401.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:58,754 -- [test_withdraw.py-->line:75] - ERROR: Decimal('500000') != Decimal('-500000.00')
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(recharge_money, end_money - start_money)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('500000') != Decimal('-500000.00')
2020-03-30 16:09:58,901 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-会员id为空--执行通过
2020-03-30 16:09:59,033 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-03-30 16:09:59,158 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-03-30 16:09:59,158 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 16:09:59,158 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 399801.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:59,158 -- [test_withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:09:59,285 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-03-30 16:09:59,425 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-03-30 16:09:59,425 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 16:09:59,425 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 399801.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:59,426 -- [test_withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:09:59,547 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-03-30 16:09:59,548 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 16:09:59,548 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:59,548 -- [test_withdraw.py-->line:75] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-03-30 16:09:59,666 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-03-30 16:09:59,666 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-03-30 16:09:59,666 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:59,666 -- [test_withdraw.py-->line:75] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-03-30 16:09:59,801 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-03-30 16:09:59,801 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-03-30 16:09:59,801 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:59,802 -- [test_withdraw.py-->line:75] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-03-30 16:09:59,942 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-03-30 16:09:59,942 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 16:09:59,942 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:09:59,942 -- [test_withdraw.py-->line:75] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-03-30 16:10:00,072 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-03-30 16:10:00,366 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-03-30 16:10:00,367 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-03-30 16:10:00,367 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:10:00,367 -- [test_withdraw.py-->line:75] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-03-30 16:10:00,415 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 16:13:27,999 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-03-30 16:13:31,955 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-03-30 16:13:32,159 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-03-30 16:13:32,159 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-03-30 16:13:32,160 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:32,160 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 16:13:32,467 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-03-30 16:13:32,467 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-03-30 16:13:32,468 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:32,468 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-30 16:13:32,763 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-03-30 16:13:33,079 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-03-30 16:13:33,549 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 16:13:34,031 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 16:13:34,365 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 16:13:34,683 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 16:13:34,808 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 16:13:34,951 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 16:13:35,111 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 16:13:35,111 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 16:13:35,111 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 900203.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:35,112 -- [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:13:35,242 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 16:13:35,242 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 16:13:35,243 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 900203.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:35,243 -- [test_recharge.py-->line:78] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:13:35,364 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 16:13:35,365 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 16:13:35,365 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:35,365 -- [test_recharge.py-->line:78] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 16:13:35,498 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 16:13:35,498 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 16:13:35,498 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:35,498 -- [test_recharge.py-->line:78] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-03-30 16:13:35,637 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 16:13:35,637 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 16:13:35,637 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:35,637 -- [test_recharge.py-->line:78] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-30 16:13:35,784 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 16:13:35,785 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 16:13:35,785 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:35,785 -- [test_recharge.py-->line:78] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-30 16:13:35,919 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 16:13:36,907 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-03-30 16:13:37,681 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-03-30 16:13:38,915 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-03-30 16:13:40,023 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-03-30 16:13:40,776 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-03-30 16:13:41,856 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-03-30 16:13:42,092 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-03-30 16:13:42,296 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-03-30 16:13:42,501 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-03-30 16:13:42,707 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-03-30 16:13:43,014 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-03-30 16:13:43,267 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-03-30 16:13:43,662 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-03-30 16:13:44,097 -- [test_withdraw.py-->line:80] - INFO: 用例--提现成功-整数--执行通过
2020-03-30 16:13:44,443 -- [test_withdraw.py-->line:80] - INFO: 用例--提现成功-1位小数--执行通过
2020-03-30 16:13:44,799 -- [test_withdraw.py-->line:80] - INFO: 用例--提现成功-2位小数--执行通过
2020-03-30 16:13:45,160 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现成功-50万--执行未通过
2020-03-30 16:13:45,160 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-03-30 16:13:45,161 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:45,161 -- [test_withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-03-30 16:13:45,312 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-会员id为空--执行通过
2020-03-30 16:13:45,432 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-03-30 16:13:45,572 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-03-30 16:13:45,572 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 16:13:45,572 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 299602.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:45,572 -- [test_withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:13:45,696 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-03-30 16:13:45,853 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-03-30 16:13:45,854 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 16:13:45,854 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 299602.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:45,854 -- [test_withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-30 16:13:46,010 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-03-30 16:13:46,010 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 16:13:46,010 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:46,010 -- [test_withdraw.py-->line:75] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-03-30 16:13:46,129 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-03-30 16:13:46,129 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-03-30 16:13:46,129 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:46,129 -- [test_withdraw.py-->line:75] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-03-30 16:13:46,251 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-03-30 16:13:46,251 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-03-30 16:13:46,251 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:46,251 -- [test_withdraw.py-->line:75] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-03-30 16:13:46,375 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-03-30 16:13:46,375 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-03-30 16:13:46,375 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:46,375 -- [test_withdraw.py-->line:75] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-03-30 16:13:46,507 -- [test_withdraw.py-->line:80] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-03-30 16:13:46,851 -- [test_withdraw.py-->line:72] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-03-30 16:13:46,851 -- [test_withdraw.py-->line:73] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-03-30 16:13:46,852 -- [test_withdraw.py-->line:74] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 16:13:46,852 -- [test_withdraw.py-->line:75] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-03-30 16:13:46,920 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-03-30 17:39:53,920 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-整数--执行通过
2020-03-30 17:39:54,228 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-03-30 17:39:54,533 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-1位小数--执行通过
2020-03-30 17:39:54,838 -- [test_recharge.py-->line:81] - INFO: 用例--充值成功-2位小数--执行通过
2020-03-30 17:39:54,961 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-会员id为空--执行通过
2020-03-30 17:39:55,090 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-03-30 17:39:55,218 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-03-30 17:39:55,218 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-03-30 17:39:55,219 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 800004.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 17:39:55,219 -- [test_recharge.py-->line:78] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-30 17:39:55,405 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-03-30 17:39:55,405 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 17:39:55,406 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 800004.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 17:39:55,406 -- [test_recharge.py-->line:78] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 65, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-03-30 17:39:55,528 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-03-30 17:39:55,528 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 17:39:55,528 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 17:39:55,528 -- [test_recharge.py-->line:78] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-30 17:39:55,653 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-03-30 17:39:55,653 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-03-30 17:39:55,653 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 17:39:55,653 -- [test_recharge.py-->line:78] - ERROR:  :: 充值金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 充值金额为空 != 余额为空
2020-03-30 17:39:55,772 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-03-30 17:39:55,772 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-03-30 17:39:55,773 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 17:39:55,773 -- [test_recharge.py-->line:78] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-03-30 17:39:55,900 -- [test_recharge.py-->line:74] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-03-30 17:39:55,900 -- [test_recharge.py-->line:75] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-03-30 17:39:55,900 -- [test_recharge.py-->line:76] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-03-30 17:39:55,900 -- [test_recharge.py-->line:78] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-03-30 17:39:56,035 -- [test_recharge.py-->line:81] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-03-30 18:51:13,271 -- [test_recharge.py-->line:83] - ERROR: 用例--ID为字符串型--执行未通过
2020-03-30 18:51:13,271 -- [test_recharge.py-->line:84] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(res["code"], expected["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-03-30 18:51:14,499 -- [test_recharge.py-->line:83] - ERROR: 用例--金额等于200000.111--执行未通过
2020-03-30 18:51:14,499 -- [test_recharge.py-->line:84] - ERROR:  :: 余额小数超过两位 != 金额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额小数超过两位 != 金额小数超过两位
2020-03-30 18:51:14,619 -- [test_recharge.py-->line:83] - ERROR: 用例--金额为str类型--执行未通过
2020-03-30 18:51:14,619 -- [test_recharge.py-->line:84] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(res["code"], expected["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-03-30 18:52:04,153 -- [test_recharge.py-->line:89] - INFO: 用例--充值成功--执行通过
2020-03-30 18:52:04,467 -- [test_recharge.py-->line:89] - INFO: 用例--ID为空--执行通过
2020-03-30 18:52:04,674 -- [test_recharge.py-->line:83] - ERROR: 用例--ID为字符串型--执行未通过
2020-03-30 18:52:04,675 -- [test_recharge.py-->line:84] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(res["code"], expected["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-03-30 18:52:04,972 -- [test_recharge.py-->line:89] - INFO: 用例--ID为其他账号--执行通过
2020-03-30 18:52:05,266 -- [test_recharge.py-->line:89] - INFO: 用例--ID为小数--执行通过
2020-03-30 18:52:05,892 -- [test_recharge.py-->line:89] - INFO: 用例--金额等于0--执行通过
2020-03-30 18:52:06,201 -- [test_recharge.py-->line:89] - INFO: 用例--金额为空--执行通过
2020-03-30 18:52:06,511 -- [test_recharge.py-->line:89] - INFO: 用例--金额等于-1--执行通过
2020-03-30 18:52:06,719 -- [test_recharge.py-->line:89] - INFO: 用例--金额等于-10--执行通过
2020-03-30 18:52:07,115 -- [test_recharge.py-->line:89] - INFO: 用例--金额等于500000--执行通过
2020-03-30 18:52:07,334 -- [test_recharge.py-->line:89] - INFO: 用例--金额等于500000.1--执行通过
2020-03-30 18:52:07,766 -- [test_recharge.py-->line:89] - INFO: 用例--金额等于200000.23--执行通过
2020-03-30 18:52:07,868 -- [test_recharge.py-->line:83] - ERROR: 用例--金额等于200000.111--执行未通过
2020-03-30 18:52:07,869 -- [test_recharge.py-->line:84] - ERROR:  :: 余额小数超过两位 != 金额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 78, in test_recharge
    self.assertEqual(res["msg"], expected["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额小数超过两位 != 金额小数超过两位
2020-03-30 18:52:08,078 -- [test_recharge.py-->line:83] - ERROR: 用例--金额为str类型--执行未通过
2020-03-30 18:52:08,078 -- [test_recharge.py-->line:84] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 77, in test_recharge
    self.assertEqual(res["code"], expected["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-01 19:17:29,366 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 19:17:29,575 -- [test_add.py-->line:72] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 19:17:29,720 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 19:17:29,878 -- [test_add.py-->line:72] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 19:17:30,091 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 19:17:30,290 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 19:17:30,494 -- [test_add.py-->line:72] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 19:17:30,698 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 19:17:30,903 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 19:17:31,109 -- [test_add.py-->line:72] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 19:18:07,869 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 19:18:08,074 -- [test_add.py-->line:73] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 19:18:08,277 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 19:18:08,483 -- [test_add.py-->line:73] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 19:18:08,688 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 19:18:08,893 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 19:18:09,100 -- [test_add.py-->line:73] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 19:18:09,304 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 19:18:09,509 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 19:18:09,630 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 19:19:52,931 -- [test_add.py-->line:73] - INFO: 用例--加标成功--执行通过
2020-04-01 19:19:53,138 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 19:19:53,291 -- [test_add.py-->line:73] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 19:19:53,546 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 19:19:53,676 -- [test_add.py-->line:73] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 19:19:53,801 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 19:19:53,940 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 19:19:54,078 -- [test_add.py-->line:73] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 19:19:54,204 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 19:19:54,336 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 19:19:54,460 -- [test_add.py-->line:73] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 19:49:21,389 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 19:49:21,678 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 19:49:21,972 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 19:49:22,267 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 19:49:22,370 -- [test_recharge.py-->line:82] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 19:49:22,481 -- [test_recharge.py-->line:82] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 19:49:22,602 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 19:49:22,602 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 19:49:22,602 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1300405.4, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:22,602 -- [test_recharge.py-->line:79] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 19:49:22,713 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 19:49:22,713 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:49:22,713 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1300405.4, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:22,714 -- [test_recharge.py-->line:79] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 19:49:22,818 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 19:49:22,818 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:49:22,818 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:22,819 -- [test_recharge.py-->line:79] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 19:49:22,916 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 19:49:22,916 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 19:49:22,916 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:22,917 -- [test_recharge.py-->line:79] - ERROR:  :: 充值金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 充值金额为空 != 余额为空
2020-04-01 19:49:23,019 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 19:49:23,019 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 19:49:23,020 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:23,020 -- [test_recharge.py-->line:79] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-01 19:49:23,135 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 19:49:23,135 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:49:23,136 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:23,136 -- [test_recharge.py-->line:79] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 19:49:23,231 -- [test_recharge.py-->line:82] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 19:49:44,263 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 19:49:44,582 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 19:49:44,914 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 19:49:45,260 -- [test_recharge.py-->line:82] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 19:49:45,390 -- [test_recharge.py-->line:82] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 19:49:45,523 -- [test_recharge.py-->line:82] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 19:49:45,663 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 19:49:45,663 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 19:49:45,663 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1800806.66, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:45,663 -- [test_recharge.py-->line:79] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 19:49:45,809 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 19:49:45,809 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:49:45,809 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1800806.66, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:45,809 -- [test_recharge.py-->line:79] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 66, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 19:49:45,947 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 19:49:45,948 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:49:45,948 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:45,948 -- [test_recharge.py-->line:79] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 19:49:46,085 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 19:49:46,086 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 19:49:46,086 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:46,086 -- [test_recharge.py-->line:79] - ERROR:  :: 充值金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 充值金额为空 != 余额为空
2020-04-01 19:49:46,234 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 19:49:46,234 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 19:49:46,234 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:46,234 -- [test_recharge.py-->line:79] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-01 19:49:46,379 -- [test_recharge.py-->line:75] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 19:49:46,379 -- [test_recharge.py-->line:76] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:49:46,379 -- [test_recharge.py-->line:77] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:49:46,380 -- [test_recharge.py-->line:79] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 67, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 19:49:46,521 -- [test_recharge.py-->line:82] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 19:54:47,312 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 19:54:48,235 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 19:54:48,953 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 19:54:49,566 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 19:54:49,875 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 19:54:50,144 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 19:54:50,282 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 19:54:50,282 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 19:54:50,283 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2301207.92, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:54:50,283 -- [test_recharge.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 19:54:50,445 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 19:54:50,445 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:54:50,445 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2301207.92, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:54:50,445 -- [test_recharge.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-01 19:54:50,580 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 19:54:50,580 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:54:50,580 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:54:50,581 -- [test_recharge.py-->line:82] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 19:54:50,705 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 19:54:50,706 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 19:54:50,706 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:54:50,706 -- [test_recharge.py-->line:82] - ERROR:  :: 充值金额为空 != 余额为空
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 充值金额为空 != 余额为空
2020-04-01 19:54:50,831 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 19:54:50,831 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 19:54:50,831 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:54:50,831 -- [test_recharge.py-->line:82] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-01 19:54:50,962 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 19:54:50,962 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 19:54:50,962 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 19:54:50,962 -- [test_recharge.py-->line:82] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\Software\PyCharm\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-01 19:54:51,106 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 19:57:31,257 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-01 19:57:31,565 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 19:57:31,791 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 19:57:32,079 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 19:57:32,457 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 19:57:32,643 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 19:57:32,997 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 19:57:33,201 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 19:57:33,408 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 19:57:33,714 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 19:57:34,023 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 21:13:20,488 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:13:22,723 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:13:22,926 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:13:22,926 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:13:22,927 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:22,927 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:13:23,074 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:13:23,074 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:13:23,074 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:23,074 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:13:23,379 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:13:23,667 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:13:24,364 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:13:24,735 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:13:25,093 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:13:25,397 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:13:25,536 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:13:25,679 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:13:25,847 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:13:25,847 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:13:25,847 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2801609.18, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:25,847 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:13:25,979 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:13:25,979 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:13:25,979 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2801609.18, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:25,979 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:13:26,113 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:13:26,113 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:13:26,113 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:26,113 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:13:26,249 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:13:26,249 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:13:26,249 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:26,249 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:13:26,387 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:13:26,387 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:13:26,387 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:26,387 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:13:26,546 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:13:26,546 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:13:26,546 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:13:26,546 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:13:26,705 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:13:27,485 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:13:28,284 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:13:29,115 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:13:30,093 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:13:30,969 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:13:31,775 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:13:31,911 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:13:32,055 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:13:32,188 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:13:32,318 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:13:32,496 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:13:32,655 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:13:32,943 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:13:32,999 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-01 21:14:44,102 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:14:46,140 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:14:46,288 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:14:46,288 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:14:46,288 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:46,288 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:14:46,463 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:14:46,463 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:14:46,463 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:46,463 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:14:46,752 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:14:47,041 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:14:47,779 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:14:48,149 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:14:48,462 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:14:48,800 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:14:48,933 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:14:49,086 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:14:49,452 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:14:49,452 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:14:49,452 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 3302010.44, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:49,452 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:14:49,586 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:14:49,586 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:14:49,586 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 3302010.44, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:49,586 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:14:49,726 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:14:49,726 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:14:49,726 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:49,726 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:14:49,852 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:14:49,852 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:14:49,852 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:49,852 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:14:50,004 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:14:50,004 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:14:50,004 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:50,004 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:14:50,147 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:14:50,148 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:14:50,148 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:50,148 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:14:50,301 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:14:51,098 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:14:51,897 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:14:52,686 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:14:53,483 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:14:54,298 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:14:55,144 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:14:55,308 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:14:55,446 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:14:55,583 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:14:55,729 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:14:55,886 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:14:56,021 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:14:56,323 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:14:57,116 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-01 21:14:57,453 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-01 21:14:57,816 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-01 21:14:58,189 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-01 21:14:58,334 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-01 21:14:58,486 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-01 21:14:58,628 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-01 21:14:58,629 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:14:58,629 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2651410.12, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:58,629 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:14:58,765 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-01 21:14:59,116 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-01 21:14:59,117 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:14:59,117 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2651410.12, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:59,117 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:14:59,278 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-01 21:14:59,279 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:14:59,279 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:59,279 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:14:59,437 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-01 21:14:59,437 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-01 21:14:59,437 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:59,438 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-01 21:14:59,576 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-01 21:14:59,576 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-01 21:14:59,576 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:59,576 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-01 21:14:59,718 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-01 21:14:59,719 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:14:59,719 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:14:59,719 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:14:59,856 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-01 21:15:00,411 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-01 21:15:00,411 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-01 21:15:00,411 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2151410.12, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:15:00,411 -- [test_withdraw.py-->line:80] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-04-01 21:15:00,468 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-01 21:19:21,079 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:19:25,285 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:19:25,420 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:19:25,420 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:19:25,420 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:25,420 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:19:25,580 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:19:25,580 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:19:25,580 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:25,580 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:19:25,869 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:19:26,171 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:19:26,706 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:19:27,048 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:19:27,416 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:19:27,757 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:19:27,927 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:19:28,060 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:19:28,222 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:19:28,222 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:19:28,223 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2651811.38, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:28,223 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:19:28,394 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:19:28,394 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:19:28,394 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2651811.38, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:28,395 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:19:28,571 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:19:28,571 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:19:28,571 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:28,571 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:19:28,706 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:19:28,706 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:19:28,707 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:28,707 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:19:28,858 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:19:28,858 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:19:28,858 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:28,859 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:19:29,054 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:19:29,054 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:19:29,054 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:29,055 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:19:29,207 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:19:30,006 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:19:30,867 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:19:31,975 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:19:33,000 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:19:33,828 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:19:34,815 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:19:34,952 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:19:35,098 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:19:35,240 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:19:35,400 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:19:35,565 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:19:35,732 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:19:36,036 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:19:36,796 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-01 21:19:37,149 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-01 21:19:38,155 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-01 21:19:38,509 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-01 21:19:38,664 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-01 21:19:38,865 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-01 21:19:39,029 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-01 21:19:39,029 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:19:39,030 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2001211.06, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:39,030 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:19:39,183 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-01 21:19:39,335 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-01 21:19:39,336 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:19:39,336 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2001211.06, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:39,336 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:19:39,491 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-01 21:19:39,491 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:19:39,491 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:39,492 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:19:39,638 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-01 21:19:39,638 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-01 21:19:39,638 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:39,638 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-01 21:19:39,790 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-01 21:19:39,790 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-01 21:19:39,790 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:39,790 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-01 21:19:39,936 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-01 21:19:39,936 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:19:39,936 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:39,936 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:19:40,101 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-01 21:19:40,464 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-01 21:19:40,464 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-01 21:19:40,464 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1501211.06, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:19:40,464 -- [test_withdraw.py-->line:80] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-04-01 21:19:40,514 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-01 21:20:42,185 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:20:45,909 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-01 21:20:46,216 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 21:20:46,424 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 21:20:46,727 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 21:20:46,932 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 21:20:47,241 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 21:20:47,445 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 21:20:47,583 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 21:20:47,749 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 21:20:47,919 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 21:20:48,057 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 21:20:49,476 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:20:49,618 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:20:49,618 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:20:49,618 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:49,619 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:20:49,764 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:20:49,764 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:20:49,765 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:49,765 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:20:50,053 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:20:50,288 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:20:51,047 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:20:51,370 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:20:51,684 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:20:52,034 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:20:52,176 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:20:52,355 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:20:52,490 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:20:52,491 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:20:52,491 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2001612.32, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:52,491 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:20:52,629 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:20:52,629 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:20:52,629 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 2001612.32, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:52,629 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:20:52,810 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:20:52,810 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:20:52,810 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:52,810 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:20:52,958 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:20:52,958 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:20:52,959 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:52,959 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:20:53,084 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:20:53,085 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:20:53,085 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:53,085 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:20:53,233 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:20:53,233 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:20:53,233 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:20:53,233 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:20:53,369 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:20:54,180 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:20:57,069 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:20:58,032 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:20:58,863 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:20:59,732 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:21:00,755 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:21:01,167 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:21:01,455 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:21:01,593 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:21:01,740 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:21:01,967 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:21:02,731 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:21:03,191 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:21:04,236 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-01 21:21:04,750 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-01 21:21:05,541 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-01 21:21:05,951 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-01 21:21:06,374 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-01 21:21:06,523 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-01 21:21:06,669 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-01 21:21:06,669 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:21:06,669 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1351012.0, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:06,669 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:21:06,806 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-01 21:21:07,038 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-01 21:21:07,038 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:21:07,038 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1351012.0, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:07,038 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:21:07,518 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-01 21:21:07,518 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:21:07,519 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:07,519 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:21:07,823 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-01 21:21:07,823 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-01 21:21:07,823 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:07,823 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-01 21:21:09,462 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-01 21:21:09,462 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-01 21:21:09,462 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:09,462 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-01 21:21:09,770 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-01 21:21:09,771 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:21:09,771 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:09,772 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:21:10,133 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-01 21:21:11,550 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-01 21:21:11,550 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-01 21:21:11,550 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 851012.0, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:21:11,550 -- [test_withdraw.py-->line:80] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-04-01 21:21:11,596 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-01 21:38:25,906 -- [test_audit.py-->line:99] - INFO: 用例--审核通过--执行通过
2020-04-01 21:38:26,312 -- [test_audit.py-->line:99] - INFO: 用例--审核不通过--执行通过
2020-04-01 21:38:26,975 -- [test_audit.py-->line:99] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-01 21:38:27,487 -- [test_audit.py-->line:99] - INFO: 用例--项目id为空--执行通过
2020-04-01 21:38:27,872 -- [test_audit.py-->line:99] - INFO: 用例--项目id不存在--执行通过
2020-04-01 21:39:03,849 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:39:06,765 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-01 21:39:07,226 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 21:39:07,910 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 21:39:08,047 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 21:39:08,205 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 21:39:08,348 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 21:39:08,496 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 21:39:08,792 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 21:39:09,224 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 21:39:09,356 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 21:39:09,498 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 21:39:10,260 -- [test_audit.py-->line:99] - INFO: 用例--审核通过--执行通过
2020-04-01 21:39:10,509 -- [test_audit.py-->line:99] - INFO: 用例--审核不通过--执行通过
2020-04-01 21:39:10,899 -- [test_audit.py-->line:99] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-01 21:39:11,168 -- [test_audit.py-->line:99] - INFO: 用例--项目id为空--执行通过
2020-04-01 21:39:11,391 -- [test_audit.py-->line:99] - INFO: 用例--项目id不存在--执行通过
2020-04-01 21:39:11,714 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:39:11,932 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:39:11,933 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:39:11,933 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:11,933 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:39:12,098 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:39:12,098 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:39:12,098 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:12,098 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:39:12,403 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:39:12,712 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:39:13,364 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:39:13,705 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:39:14,084 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:39:14,438 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:39:14,588 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:39:14,733 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:39:14,885 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:39:14,885 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:39:14,885 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1351413.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:14,885 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:39:15,065 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:39:15,065 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:39:15,065 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1351413.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:15,065 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:39:15,235 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:39:15,235 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:39:15,235 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:15,236 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:39:15,374 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:39:15,374 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:39:15,374 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:15,374 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:39:15,520 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:39:15,520 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:39:15,520 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:15,521 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:39:15,657 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:39:15,657 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:39:15,657 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:15,657 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:39:15,812 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:39:16,606 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:39:17,440 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:39:18,245 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:39:19,081 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:39:19,944 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:39:20,975 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:39:21,126 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:39:21,274 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:39:21,408 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:39:21,566 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:39:21,721 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:39:21,910 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:39:22,209 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:39:22,984 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-01 21:39:23,376 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-01 21:39:23,699 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-01 21:39:24,026 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-01 21:39:24,175 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-01 21:39:24,323 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-01 21:39:24,461 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-01 21:39:24,461 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:39:24,461 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 700812.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:24,461 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:39:24,596 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-01 21:39:24,747 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-01 21:39:24,747 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:39:24,747 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 700812.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:24,747 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:39:24,896 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-01 21:39:24,896 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:39:24,896 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:24,896 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:39:25,032 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-01 21:39:25,032 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-01 21:39:25,032 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:25,032 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-01 21:39:25,170 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-01 21:39:25,170 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-01 21:39:25,170 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:25,171 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-01 21:39:25,305 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-01 21:39:25,305 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:39:25,305 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:25,305 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:39:25,473 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-01 21:39:25,843 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-01 21:39:25,843 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-01 21:39:25,844 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 200812.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:39:25,844 -- [test_withdraw.py-->line:80] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-04-01 21:39:25,889 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-01 21:48:52,981 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:48:55,874 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-01 21:48:55,978 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 21:48:56,087 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 21:48:56,189 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 21:48:56,287 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 21:48:56,382 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 21:48:56,504 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 21:48:56,615 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 21:48:56,734 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 21:48:56,854 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 21:48:56,958 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 21:48:57,660 -- [test_audit.py-->line:99] - INFO: 用例--审核通过--执行通过
2020-04-01 21:48:57,882 -- [test_audit.py-->line:99] - INFO: 用例--审核不通过--执行通过
2020-04-01 21:48:58,200 -- [test_audit.py-->line:99] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-01 21:48:58,448 -- [test_audit.py-->line:99] - INFO: 用例--项目id为空--执行通过
2020-04-01 21:48:59,648 -- [test_audit.py-->line:99] - INFO: 用例--项目id不存在--执行通过
2020-04-01 21:48:59,894 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:48:59,992 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:48:59,992 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:48:59,992 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:48:59,993 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:49:00,096 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:49:00,096 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:49:00,096 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:00,097 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:49:00,357 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:49:00,605 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:49:01,080 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:49:01,356 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:49:01,633 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:49:01,921 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:49:02,054 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:49:02,275 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:49:02,543 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:49:02,543 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:49:02,543 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 701214.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:02,544 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:02,815 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:49:02,815 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:49:02,815 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 701214.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:02,815 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:02,931 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:49:02,931 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:49:02,931 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:02,931 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:49:03,039 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:49:03,039 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:49:03,040 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:03,040 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:49:03,153 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:49:03,153 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:49:03,154 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:03,154 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:49:03,272 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:49:03,272 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:49:03,272 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:03,272 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:49:03,372 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:49:04,151 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:49:04,909 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:49:05,648 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:49:06,393 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:49:07,146 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:49:07,893 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:49:08,099 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:49:08,303 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:49:08,509 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:49:08,714 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:49:08,919 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:49:09,123 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:49:09,533 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:49:10,514 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-01 21:49:10,844 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-01 21:49:11,160 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-01 21:49:11,445 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-01 21:49:11,543 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-01 21:49:11,654 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-01 21:49:11,775 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-01 21:49:11,775 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:49:11,775 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 50613.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:11,775 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:11,863 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-01 21:49:11,964 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-01 21:49:11,965 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:49:11,965 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 50613.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:11,965 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:12,078 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-01 21:49:12,078 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:49:12,078 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:12,078 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:49:12,183 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-01 21:49:12,183 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-01 21:49:12,184 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:12,184 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-01 21:49:12,299 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-01 21:49:12,300 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-01 21:49:12,300 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:12,300 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-01 21:49:12,408 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-01 21:49:12,408 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:49:12,408 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:12,409 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:49:12,506 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-01 21:49:12,794 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-01 21:49:12,794 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-01 21:49:12,795 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:12,795 -- [test_withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-01 21:49:12,821 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-01 21:49:16,921 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-01 21:49:20,699 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-01 21:49:21,001 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-01 21:49:21,207 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-01 21:49:21,515 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-01 21:49:21,669 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-01 21:49:21,878 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-01 21:49:22,009 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-01 21:49:22,154 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-01 21:49:22,312 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-01 21:49:22,455 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-01 21:49:22,628 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-01 21:49:23,523 -- [test_audit.py-->line:99] - INFO: 用例--审核通过--执行通过
2020-04-01 21:49:23,869 -- [test_audit.py-->line:99] - INFO: 用例--审核不通过--执行通过
2020-04-01 21:49:24,251 -- [test_audit.py-->line:99] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-01 21:49:24,537 -- [test_audit.py-->line:99] - INFO: 用例--项目id为空--执行通过
2020-04-01 21:49:24,817 -- [test_audit.py-->line:99] - INFO: 用例--项目id不存在--执行通过
2020-04-01 21:49:25,121 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-01 21:49:25,271 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-01 21:49:25,271 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-01 21:49:25,271 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:25,271 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:49:25,405 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-01 21:49:25,405 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-01 21:49:25,405 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:25,405 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-01 21:49:25,702 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-01 21:49:25,998 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-01 21:49:26,627 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-01 21:49:26,958 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-01 21:49:27,288 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-01 21:49:27,631 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-01 21:49:27,775 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-01 21:49:27,924 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-01 21:49:28,077 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-01 21:49:28,078 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:49:28,078 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 551015.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:28,078 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:28,234 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-01 21:49:28,234 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:49:28,234 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 551015.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:28,234 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:28,387 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-01 21:49:28,387 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:49:28,387 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:28,387 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:49:28,535 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-01 21:49:28,535 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-01 21:49:28,535 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:28,535 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-01 21:49:28,697 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-01 21:49:28,697 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-01 21:49:28,697 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:28,697 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-01 21:49:28,845 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-01 21:49:28,845 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-01 21:49:28,845 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:28,845 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-01 21:49:28,996 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-01 21:49:29,797 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-01 21:49:30,574 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-01 21:49:31,406 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-01 21:49:32,201 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-01 21:49:33,019 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-01 21:49:33,806 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-01 21:49:34,005 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-01 21:49:34,198 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-01 21:49:34,404 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-01 21:49:34,691 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-01 21:49:35,049 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-01 21:49:35,236 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-01 21:49:35,533 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-01 21:49:36,451 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-01 21:49:36,821 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-01 21:49:37,293 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-01 21:49:37,643 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现成功-50万--执行未通过
2020-04-01 21:49:37,643 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-01 21:49:37,643 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:37,643 -- [test_withdraw.py-->line:80] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-01 21:49:37,778 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-01 21:49:37,922 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-01 21:49:38,112 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-01 21:49:38,112 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-01 21:49:38,112 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 400414.82, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:38,112 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:38,260 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-01 21:49:38,409 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-01 21:49:38,409 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:49:38,409 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 400414.82, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:38,409 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-01 21:49:38,574 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-01 21:49:38,574 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:49:38,574 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:38,574 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:49:38,742 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-01 21:49:38,742 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-01 21:49:38,742 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:38,742 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-01 21:49:38,867 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-01 21:49:38,867 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-01 21:49:38,867 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:38,868 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-01 21:49:39,003 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-01 21:49:39,004 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-01 21:49:39,004 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:39,004 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-01 21:49:39,156 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-01 21:49:39,481 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-01 21:49:39,481 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-01 21:49:39,481 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-01 21:49:39,481 -- [test_withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-01 21:49:39,525 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-12 17:05:30,350 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-12 17:05:30,709 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-12 17:08:01,286 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-12 17:08:03,499 -- [test_audit.py-->line:99] - INFO: 用例--审核通过--执行通过
2020-04-12 17:08:04,024 -- [test_audit.py-->line:99] - INFO: 用例--审核不通过--执行通过
2020-04-12 17:08:06,977 -- [test_audit.py-->line:99] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-12 17:08:07,403 -- [test_audit.py-->line:99] - INFO: 用例--项目id为空--执行通过
2020-04-12 17:08:07,711 -- [test_audit.py-->line:99] - INFO: 用例--项目id不存在--执行通过
2020-04-12 17:08:07,818 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-12 17:09:27,053 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-12 17:09:29,987 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-12 17:09:30,162 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-12 17:09:30,315 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-12 17:09:30,497 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-12 17:09:30,711 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-12 17:09:30,870 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-12 17:09:31,042 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-12 17:09:31,242 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-12 17:09:31,477 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-12 17:09:31,635 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-12 17:09:31,780 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-12 17:09:33,015 -- [test_audit.py-->line:99] - INFO: 用例--审核通过--执行通过
2020-04-12 17:09:33,310 -- [test_audit.py-->line:99] - INFO: 用例--审核不通过--执行通过
2020-04-12 17:09:33,681 -- [test_audit.py-->line:99] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-12 17:09:34,154 -- [test_audit.py-->line:99] - INFO: 用例--项目id为空--执行通过
2020-04-12 17:09:34,454 -- [test_audit.py-->line:99] - INFO: 用例--项目id不存在--执行通过
2020-04-12 17:09:34,819 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-12 17:09:35,019 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-12 17:09:35,019 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-12 17:09:35,019 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:35,019 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-12 17:09:35,187 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-12 17:09:35,187 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-12 17:09:35,187 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:35,188 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-12 17:09:35,555 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-12 17:09:35,877 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-12 17:09:36,448 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 17:09:36,807 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-12 17:09:37,134 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-12 17:09:37,498 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-12 17:09:37,692 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-12 17:09:37,858 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-12 17:09:38,025 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-12 17:09:38,026 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-12 17:09:38,026 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1500402.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:38,026 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:09:38,232 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-12 17:09:38,233 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:09:38,233 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1500402.26, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:38,233 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:09:38,391 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-12 17:09:38,392 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:09:38,392 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:38,393 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-12 17:09:38,583 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-12 17:09:38,583 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-12 17:09:38,584 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:38,584 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-12 17:09:38,765 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-12 17:09:38,765 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-12 17:09:38,765 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:38,765 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-12 17:09:38,922 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-12 17:09:38,922 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:09:38,922 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:38,923 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-12 17:09:39,085 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-12 17:09:40,090 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-12 17:09:40,977 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-12 17:09:42,108 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-12 17:09:43,489 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-12 17:09:44,697 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-12 17:09:46,318 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-12 17:09:46,490 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-12 17:09:46,675 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-12 17:09:46,842 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-12 17:09:47,002 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-12 17:09:47,169 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-12 17:09:47,323 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-12 17:09:47,664 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-12 17:09:48,403 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-12 17:09:48,792 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-12 17:09:49,195 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-12 17:09:49,800 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-12 17:09:49,965 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-12 17:09:50,137 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-12 17:09:50,317 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-12 17:09:50,318 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-12 17:09:50,318 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 849801.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:50,318 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:09:50,473 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-12 17:09:50,660 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-12 17:09:50,660 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:09:50,660 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 849801.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:50,660 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:09:50,858 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-12 17:09:50,858 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:09:50,858 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:50,859 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-12 17:09:51,016 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-12 17:09:51,017 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-12 17:09:51,017 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:51,017 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-12 17:09:51,220 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-12 17:09:51,220 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-12 17:09:51,220 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:51,220 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-12 17:09:51,435 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-12 17:09:51,435 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:09:51,436 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:51,436 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-12 17:09:51,620 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-12 17:09:51,997 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-12 17:09:51,998 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-12 17:09:51,998 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 349801.94, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:09:51,998 -- [test_withdraw.py-->line:80] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-04-12 17:09:52,081 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-12 17:13:35,253 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-12 17:13:38,966 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-12 17:13:39,189 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-12 17:13:39,354 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-12 17:13:39,503 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-12 17:13:39,721 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-12 17:13:39,903 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-12 17:13:40,068 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-12 17:13:40,216 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-12 17:13:40,364 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-12 17:13:40,511 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-12 17:13:40,705 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-12 17:13:41,779 -- [test_audit.py-->line:104] - INFO: 用例--审核通过--执行通过
2020-04-12 17:13:42,034 -- [test_audit.py-->line:104] - INFO: 用例--审核不通过--执行通过
2020-04-12 17:13:42,699 -- [test_audit.py-->line:104] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-12 17:13:42,982 -- [test_audit.py-->line:104] - INFO: 用例--项目id为空--执行通过
2020-04-12 17:13:43,318 -- [test_audit.py-->line:104] - INFO: 用例--项目id不存在--执行通过
2020-04-12 17:13:43,729 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-12 17:13:43,931 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-12 17:13:43,932 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-12 17:13:43,933 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:43,933 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-12 17:13:44,112 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-12 17:13:44,112 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-12 17:13:44,112 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:44,112 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-12 17:13:44,457 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-12 17:13:44,823 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-12 17:13:45,746 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 17:13:46,134 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-12 17:13:46,528 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-12 17:13:46,904 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-12 17:13:47,049 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-12 17:13:47,220 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-12 17:13:47,405 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-12 17:13:47,405 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-12 17:13:47,405 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 850203.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:47,405 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:13:47,574 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-12 17:13:47,575 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:13:47,575 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 850203.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:47,575 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:13:47,724 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-12 17:13:47,724 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:13:47,724 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:47,724 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-12 17:13:47,889 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-12 17:13:47,889 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-12 17:13:47,890 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:47,890 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-12 17:13:48,052 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-12 17:13:48,052 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-12 17:13:48,053 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:48,053 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-12 17:13:48,208 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-12 17:13:48,208 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:13:48,208 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:48,208 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-12 17:13:48,377 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-12 17:13:49,255 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-12 17:13:50,424 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-12 17:13:51,606 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-12 17:13:52,536 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-12 17:13:53,466 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-12 17:13:54,368 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-12 17:13:54,518 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-12 17:13:54,717 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-12 17:13:55,875 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-12 17:13:56,043 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-12 17:13:56,219 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-12 17:13:56,371 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-12 17:13:56,701 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-12 17:13:57,610 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-12 17:13:57,953 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-12 17:13:58,321 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-12 17:13:58,695 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-12 17:13:58,871 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-12 17:13:59,052 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-12 17:13:59,255 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-12 17:13:59,256 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-12 17:13:59,256 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199602.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:59,256 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:13:59,436 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-12 17:13:59,622 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-12 17:13:59,622 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:13:59,622 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199602.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:59,622 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:13:59,828 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-12 17:13:59,828 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:13:59,828 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:13:59,828 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-12 17:14:00,014 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-12 17:14:00,015 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-12 17:14:00,015 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:14:00,015 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-12 17:14:00,222 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-12 17:14:00,222 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-12 17:14:00,222 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:14:00,222 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-12 17:14:00,433 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-12 17:14:00,433 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:14:00,433 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:14:00,433 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-12 17:14:00,624 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-12 17:14:01,081 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-12 17:14:01,082 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-12 17:14:01,082 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:14:01,082 -- [test_withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-12 17:14:01,160 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-12 17:17:20,989 -- [run_test.py-->line:13] - INFO: --------------------测试用例开始执行--------------------
2020-04-12 17:17:27,617 -- [test_add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-12 17:17:27,823 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-12 17:17:28,053 -- [test_add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-12 17:17:28,235 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-12 17:17:28,416 -- [test_add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-12 17:17:28,665 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-12 17:17:28,830 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-12 17:17:29,006 -- [test_add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-12 17:17:29,169 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-12 17:17:29,327 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-12 17:17:29,535 -- [test_add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-12 17:17:30,562 -- [test_audit.py-->line:108] - INFO: 用例--审核通过--执行通过
2020-04-12 17:17:30,912 -- [test_audit.py-->line:108] - INFO: 用例--审核不通过--执行通过
2020-04-12 17:17:31,232 -- [test_audit.py-->line:108] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-12 17:17:31,521 -- [test_audit.py-->line:108] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-12 17:17:31,828 -- [test_audit.py-->line:108] - INFO: 用例--项目id为空--执行通过
2020-04-12 17:17:32,164 -- [test_audit.py-->line:108] - INFO: 用例--项目id不存在--执行通过
2020-04-12 17:17:32,541 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-12 17:17:32,737 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-12 17:17:32,738 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-12 17:17:32,738 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:32,738 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-12 17:17:32,920 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-12 17:17:32,920 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-12 17:17:32,920 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:32,920 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-12 17:17:33,256 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-12 17:17:33,573 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-12 17:17:34,196 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 17:17:34,576 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-12 17:17:35,260 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-12 17:17:35,647 -- [test_recharge.py-->line:85] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-12 17:17:35,822 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-12 17:17:36,015 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-12 17:17:36,205 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-12 17:17:36,206 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-12 17:17:36,206 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 700004.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:36,207 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:17:36,396 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-12 17:17:36,397 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:17:36,397 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 700004.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:36,397 -- [test_recharge.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:17:36,539 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-12 17:17:36,539 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:17:36,539 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:36,539 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-12 17:17:36,724 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-12 17:17:36,725 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-12 17:17:36,725 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:36,726 -- [test_recharge.py-->line:82] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-12 17:17:36,919 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-12 17:17:36,920 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-12 17:17:36,920 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:36,920 -- [test_recharge.py-->line:82] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-12 17:17:37,065 -- [test_recharge.py-->line:78] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-12 17:17:37,065 -- [test_recharge.py-->line:79] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-12 17:17:37,065 -- [test_recharge.py-->line:80] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:37,065 -- [test_recharge.py-->line:82] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-12 17:17:37,221 -- [test_recharge.py-->line:85] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-12 17:17:38,048 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-12 17:17:38,946 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-12 17:17:39,822 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-12 17:17:40,719 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-12 17:17:41,570 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-12 17:17:42,427 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-12 17:17:42,596 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-12 17:17:42,801 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-12 17:17:43,015 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-12 17:17:43,204 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-12 17:17:43,386 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-12 17:17:43,581 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-12 17:17:43,942 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-12 17:17:44,727 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-12 17:17:45,076 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-12 17:17:45,618 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-12 17:17:49,460 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-12 17:17:49,619 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-12 17:17:49,789 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-12 17:17:50,185 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-12 17:17:50,185 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-12 17:17:50,185 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 49403.82, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:50,185 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:17:50,336 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-12 17:17:50,489 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-12 17:17:50,489 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:17:50,490 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 49403.82, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:50,490 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-12 17:17:50,703 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-12 17:17:50,703 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:17:50,703 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:50,703 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-12 17:17:50,937 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-12 17:17:50,937 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-12 17:17:50,937 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:50,937 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-12 17:17:51,129 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-12 17:17:51,129 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-12 17:17:51,129 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:51,129 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-12 17:17:51,310 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-12 17:17:51,311 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-12 17:17:51,311 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:51,311 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-12 17:17:51,473 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-12 17:17:51,848 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-12 17:17:51,848 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-12 17:17:51,848 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 17:17:51,848 -- [test_withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-12 17:17:51,919 -- [run_test.py-->line:25] - INFO: --------------------测试用例执行结束--------------------
2020-04-12 20:22:15,426 -- [test_invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-12 20:22:15,625 -- [test_invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-12 20:22:15,819 -- [test_invest.py-->line:49] - ERROR: 用例--管理员审核--执行未通过
2020-04-12 20:22:15,819 -- [test_invest.py-->line:50] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-12 20:22:15,820 -- [test_invest.py-->line:51] - DEBUG: 实际结果：{'code': 2, 'msg': '普通会员不能审核项目，请使用管理员账号', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 20:22:15,820 -- [test_invest.py-->line:52] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_invest.py", line 45, in test_invest
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-12 20:22:16,015 -- [test_invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 20:22:16,212 -- [test_invest.py-->line:49] - ERROR: 用例--投资人正常投资--执行未通过
2020-04-12 20:22:16,213 -- [test_invest.py-->line:50] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-12 20:22:16,213 -- [test_invest.py-->line:51] - DEBUG: 实际结果：{'code': 2, 'msg': '该项目不在竞标中状态', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-12 20:22:16,214 -- [test_invest.py-->line:52] - ERROR:  :: 0 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_invest.py", line 45, in test_invest
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 2
2020-04-12 20:22:16,434 -- [test_invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-12 20:22:16,672 -- [test_invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-12 20:22:16,858 -- [test_invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-12 20:25:29,623 -- [test_invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-12 20:25:29,833 -- [test_invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-12 20:25:30,194 -- [test_invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-12 20:25:30,296 -- [test_invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-12 20:25:30,423 -- [test_invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 20:25:30,768 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-12 20:25:30,886 -- [test_invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-12 20:25:30,984 -- [test_invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-12 20:25:31,110 -- [test_invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-12 20:25:44,874 -- [test_invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-12 20:25:45,061 -- [test_invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-12 20:25:45,439 -- [test_invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-12 20:25:45,611 -- [test_invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-12 20:25:46,065 -- [test_invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 20:25:46,379 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-12 20:25:46,553 -- [test_invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-12 20:25:46,726 -- [test_invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-12 20:25:46,930 -- [test_invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-12 20:28:09,535 -- [test_invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-12 20:28:11,234 -- [test_invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-12 20:28:11,577 -- [test_invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-12 20:28:11,785 -- [test_invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-12 20:28:12,141 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-12 20:28:12,670 -- [test_invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-12 20:28:12,897 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-12 20:28:13,105 -- [test_invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-12 20:28:13,295 -- [test_invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-12 20:28:13,499 -- [test_invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-13 23:27:58,271 -- [run_test.py-->line:14] - INFO: --------------------测试用例开始执行--------------------
2020-04-13 23:28:00,914 -- [test_add.py-->line:82] - INFO: 用例--加标成功--执行通过
2020-04-13 23:28:01,167 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-13 23:28:01,394 -- [test_add.py-->line:82] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-13 23:28:01,567 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-13 23:28:01,755 -- [test_add.py-->line:82] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-13 23:28:01,961 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-13 23:28:02,167 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-13 23:28:02,348 -- [test_add.py-->line:82] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-13 23:28:02,549 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-13 23:28:02,732 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-13 23:28:02,932 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-13 23:28:03,695 -- [test_audit.py-->line:108] - INFO: 用例--审核通过--执行通过
2020-04-13 23:28:03,959 -- [test_audit.py-->line:108] - INFO: 用例--审核不通过--执行通过
2020-04-13 23:28:04,276 -- [test_audit.py-->line:108] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-13 23:28:04,543 -- [test_audit.py-->line:108] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-13 23:28:04,808 -- [test_audit.py-->line:108] - INFO: 用例--项目id为空--执行通过
2020-04-13 23:28:05,080 -- [test_audit.py-->line:108] - INFO: 用例--项目id不存在--执行通过
2020-04-13 23:28:05,259 -- [test_invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-13 23:28:05,472 -- [test_invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-13 23:28:05,719 -- [test_invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-13 23:28:05,901 -- [test_invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-13 23:28:06,229 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-13 23:28:06,414 -- [test_invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-13 23:28:06,716 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-13 23:28:06,892 -- [test_invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-13 23:28:07,081 -- [test_invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-13 23:28:07,343 -- [test_invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-13 23:28:07,708 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-13 23:28:07,910 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-13 23:28:07,910 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-13 23:28:07,910 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:07,910 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 23:28:08,127 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-13 23:28:08,127 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-13 23:28:08,127 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:08,127 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 23:28:08,562 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-13 23:28:08,910 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-13 23:28:09,806 -- [test_recharge.py-->line:87] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-13 23:28:10,011 -- [test_recharge.py-->line:87] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-13 23:28:10,229 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-13 23:28:10,294 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-13 23:28:10,294 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 539503.82, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:10,294 -- [test_recharge.py-->line:84] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:28:10,471 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-13 23:28:10,472 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-13 23:28:10,472 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 539503.82, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:10,472 -- [test_recharge.py-->line:84] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:28:10,719 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-13 23:28:10,719 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-13 23:28:10,720 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:10,720 -- [test_recharge.py-->line:84] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 23:28:10,939 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-13 23:28:10,939 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-13 23:28:10,939 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:10,939 -- [test_recharge.py-->line:84] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-13 23:28:11,149 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-13 23:28:11,149 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-13 23:28:11,149 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:11,149 -- [test_recharge.py-->line:84] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 23:28:11,327 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-13 23:28:11,327 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-13 23:28:11,327 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:11,327 -- [test_recharge.py-->line:84] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 23:28:11,537 -- [test_recharge.py-->line:87] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-13 23:28:12,303 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-13 23:28:13,192 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-13 23:28:14,092 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-13 23:28:14,954 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-13 23:28:15,816 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-13 23:28:16,671 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-13 23:28:16,837 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-13 23:28:17,024 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-13 23:28:17,235 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-13 23:28:17,440 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-13 23:28:17,631 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-13 23:28:17,823 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-13 23:28:18,156 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-13 23:28:19,096 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-13 23:28:19,483 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-13 23:28:19,840 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-13 23:28:20,270 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现成功-50万--执行未通过
2020-04-13 23:28:20,271 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-13 23:28:20,271 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:20,271 -- [test_withdraw.py-->line:80] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-13 23:28:20,443 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-13 23:28:20,630 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-13 23:28:20,818 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-13 23:28:20,818 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-13 23:28:20,819 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 388903.5, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:20,819 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:28:20,998 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-13 23:28:21,175 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-13 23:28:21,176 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-13 23:28:21,176 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 388903.5, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:21,176 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:28:21,355 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-13 23:28:21,356 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-13 23:28:21,356 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:21,356 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-13 23:28:21,542 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-13 23:28:21,542 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-13 23:28:21,544 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:21,544 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-13 23:28:21,718 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-13 23:28:21,718 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-13 23:28:21,718 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:21,718 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-13 23:28:21,899 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-13 23:28:21,900 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-13 23:28:21,900 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:21,900 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-13 23:28:22,097 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-13 23:28:22,512 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-13 23:28:22,512 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-13 23:28:22,512 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:28:22,512 -- [test_withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-13 23:28:22,614 -- [run_test.py-->line:26] - INFO: --------------------测试用例执行结束--------------------
2020-04-13 23:34:03,902 -- [run_test.py-->line:14] - INFO: --------------------测试用例开始执行--------------------
2020-04-13 23:34:06,389 -- [test_add.py-->line:82] - INFO: 用例--加标成功--执行通过
2020-04-13 23:34:06,597 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-13 23:34:06,849 -- [test_add.py-->line:82] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-13 23:34:07,055 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-13 23:34:07,216 -- [test_add.py-->line:82] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-13 23:34:07,417 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-13 23:34:07,623 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-13 23:34:07,891 -- [test_add.py-->line:82] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-13 23:34:08,137 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-13 23:34:08,344 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-13 23:34:08,602 -- [test_add.py-->line:82] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-13 23:34:09,376 -- [test_audit.py-->line:108] - INFO: 用例--审核通过--执行通过
2020-04-13 23:34:09,684 -- [test_audit.py-->line:108] - INFO: 用例--审核不通过--执行通过
2020-04-13 23:34:10,050 -- [test_audit.py-->line:108] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-13 23:34:10,394 -- [test_audit.py-->line:108] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-13 23:34:10,699 -- [test_audit.py-->line:108] - INFO: 用例--项目id为空--执行通过
2020-04-13 23:34:10,975 -- [test_audit.py-->line:108] - INFO: 用例--项目id不存在--执行通过
2020-04-13 23:34:11,156 -- [test_invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-13 23:34:11,364 -- [test_invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-13 23:34:11,570 -- [test_invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-13 23:34:11,774 -- [test_invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-13 23:34:12,125 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-13 23:34:12,308 -- [test_invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-13 23:34:12,543 -- [test_invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-13 23:34:12,738 -- [test_invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-13 23:34:12,931 -- [test_invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-13 23:34:13,092 -- [test_invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-13 23:34:13,420 -- [test_login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-13 23:34:13,596 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-13 23:34:13,597 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-13 23:34:13,597 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:13,597 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 23:34:13,795 -- [test_login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-13 23:34:13,795 -- [test_login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-13 23:34:13,795 -- [test_login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:13,795 -- [test_login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 23:34:14,287 -- [test_login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-13 23:34:14,604 -- [test_login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-13 23:34:15,374 -- [test_recharge.py-->line:87] - INFO: 用例--充值成功-整数--执行通过
2020-04-13 23:34:15,722 -- [test_recharge.py-->line:87] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-13 23:34:16,059 -- [test_recharge.py-->line:87] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-13 23:34:16,400 -- [test_recharge.py-->line:87] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-13 23:34:16,587 -- [test_recharge.py-->line:87] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-13 23:34:16,755 -- [test_recharge.py-->line:87] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-13 23:34:16,963 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-13 23:34:16,963 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-13 23:34:16,963 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 889304.76, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:16,963 -- [test_recharge.py-->line:84] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:34:17,124 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-13 23:34:17,124 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-13 23:34:17,124 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 889304.76, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:17,124 -- [test_recharge.py-->line:84] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:34:17,290 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-13 23:34:17,290 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-13 23:34:17,290 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:17,290 -- [test_recharge.py-->line:84] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 23:34:17,463 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-13 23:34:17,463 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-13 23:34:17,464 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:17,464 -- [test_recharge.py-->line:84] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-13 23:34:17,637 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-13 23:34:17,638 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-13 23:34:17,638 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:17,638 -- [test_recharge.py-->line:84] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 23:34:17,834 -- [test_recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-13 23:34:17,834 -- [test_recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-13 23:34:17,834 -- [test_recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:17,834 -- [test_recharge.py-->line:84] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 23:34:17,998 -- [test_recharge.py-->line:87] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-13 23:34:18,870 -- [test_register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-13 23:34:19,711 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-13 23:34:20,576 -- [test_register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-13 23:34:21,439 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-13 23:34:22,286 -- [test_register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-13 23:34:23,145 -- [test_register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-13 23:34:23,309 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-13 23:34:23,491 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-13 23:34:23,646 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-13 23:34:23,820 -- [test_register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-13 23:34:23,993 -- [test_register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-13 23:34:24,195 -- [test_register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-13 23:34:24,521 -- [test_register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-13 23:34:25,290 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-13 23:34:25,698 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-13 23:34:26,081 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-13 23:34:26,687 -- [test_withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-13 23:34:26,863 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-13 23:34:27,066 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-13 23:34:27,267 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-13 23:34:27,268 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-13 23:34:27,268 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 238704.44, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:27,268 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:34:27,506 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-13 23:34:27,815 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-13 23:34:27,815 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-13 23:34:27,815 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 238704.44, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:27,815 -- [test_withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 23:34:28,014 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-13 23:34:28,014 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-13 23:34:28,015 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:28,015 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-13 23:34:28,217 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-13 23:34:28,217 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-13 23:34:28,217 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:28,217 -- [test_withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-13 23:34:28,404 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-13 23:34:28,404 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-13 23:34:28,404 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:28,404 -- [test_withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-13 23:34:28,612 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-13 23:34:28,613 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-13 23:34:28,613 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:28,613 -- [test_withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-13 23:34:28,821 -- [test_withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-13 23:34:29,187 -- [test_withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-13 23:34:29,187 -- [test_withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-13 23:34:29,187 -- [test_withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-13 23:34:29,187 -- [test_withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-13 23:34:29,277 -- [run_test.py-->line:26] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 16:15:55,307 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 16:15:57,633 -- [run_test.py-->line:35] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 16:16:21,600 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 16:16:24,220 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 16:16:25,131 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 16:16:26,022 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 16:16:26,919 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 16:16:27,842 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 16:16:28,737 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 16:16:28,955 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 16:16:29,129 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 16:16:29,356 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 16:16:29,557 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 16:16:29,727 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 16:16:29,911 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 16:16:30,262 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 16:16:30,625 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 16:16:30,794 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 16:16:30,794 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 16:16:30,794 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:30,794 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 16:16:31,113 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 16:16:31,113 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 16:16:31,113 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:31,113 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 16:16:31,448 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 16:16:31,791 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 16:16:32,614 -- [test_03recharge.py-->line:87] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 16:16:32,962 -- [test_03recharge.py-->line:87] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-18 16:16:33,329 -- [test_03recharge.py-->line:87] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-18 16:16:33,732 -- [test_03recharge.py-->line:87] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-18 16:16:33,918 -- [test_03recharge.py-->line:87] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 16:16:34,140 -- [test_03recharge.py-->line:87] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 16:16:34,318 -- [test_03recharge.py-->line:80] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 16:16:34,318 -- [test_03recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 16:16:34,318 -- [test_03recharge.py-->line:82] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 850203.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:34,319 -- [test_03recharge.py-->line:84] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 16:16:34,508 -- [test_03recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 16:16:34,508 -- [test_03recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 16:16:34,508 -- [test_03recharge.py-->line:82] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 850203.2, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:34,508 -- [test_03recharge.py-->line:84] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 71, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 16:16:34,681 -- [test_03recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 16:16:34,682 -- [test_03recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 16:16:34,682 -- [test_03recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:34,682 -- [test_03recharge.py-->line:84] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 16:16:34,937 -- [test_03recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 16:16:34,937 -- [test_03recharge.py-->line:81] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 16:16:34,937 -- [test_03recharge.py-->line:82] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:34,937 -- [test_03recharge.py-->line:84] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 16:16:35,149 -- [test_03recharge.py-->line:80] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 16:16:35,149 -- [test_03recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 16:16:35,149 -- [test_03recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:35,149 -- [test_03recharge.py-->line:84] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 16:16:35,317 -- [test_03recharge.py-->line:80] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 16:16:35,317 -- [test_03recharge.py-->line:81] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 16:16:35,317 -- [test_03recharge.py-->line:82] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:35,317 -- [test_03recharge.py-->line:84] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 72, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 16:16:35,532 -- [test_03recharge.py-->line:87] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 16:16:36,290 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-18 16:16:36,688 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-18 16:16:37,052 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-18 16:16:37,396 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-18 16:16:37,564 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-18 16:16:37,789 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-18 16:16:37,976 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-18 16:16:37,976 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 16:16:37,976 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199602.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:37,976 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 16:16:38,163 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-18 16:16:38,379 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-18 16:16:38,379 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 16:16:38,379 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199602.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:38,379 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 16:16:38,599 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-18 16:16:38,599 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 16:16:38,599 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:38,599 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 16:16:38,874 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-18 16:16:38,874 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-18 16:16:38,874 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:38,874 -- [test_04withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-18 16:16:39,099 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-18 16:16:39,099 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-18 16:16:39,099 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:39,099 -- [test_04withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-18 16:16:39,351 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-18 16:16:39,352 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 16:16:39,352 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:39,353 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 16:16:39,619 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-18 16:16:40,022 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-18 16:16:40,022 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-18 16:16:40,022 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:16:40,022 -- [test_04withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-18 16:16:40,964 -- [test_05add.py-->line:82] - INFO: 用例--加标成功--执行通过
2020-04-18 16:16:41,163 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 16:16:41,391 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 16:16:41,597 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 16:16:41,936 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 16:16:42,143 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 16:16:42,346 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 16:16:42,576 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 16:16:42,778 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 16:16:42,998 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 16:16:43,185 -- [test_05add.py-->line:82] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 16:16:44,012 -- [test_06audit.py-->line:108] - INFO: 用例--审核通过--执行通过
2020-04-18 16:16:44,325 -- [test_06audit.py-->line:108] - INFO: 用例--审核不通过--执行通过
2020-04-18 16:16:44,625 -- [test_06audit.py-->line:108] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-18 16:16:45,010 -- [test_06audit.py-->line:108] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 16:16:45,328 -- [test_06audit.py-->line:108] - INFO: 用例--项目id为空--执行通过
2020-04-18 16:16:45,640 -- [test_06audit.py-->line:108] - INFO: 用例--项目id不存在--执行通过
2020-04-18 16:16:45,849 -- [test_07invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-18 16:16:46,061 -- [test_07invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-18 16:16:46,266 -- [test_07invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-18 16:16:46,500 -- [test_07invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-18 16:16:46,860 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-18 16:16:47,055 -- [test_07invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 16:16:47,281 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-18 16:16:47,472 -- [test_07invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-18 16:16:47,651 -- [test_07invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-18 16:16:47,855 -- [test_07invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-18 16:16:47,953 -- [run_test.py-->line:35] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 16:38:33,587 -- [test_05add.py-->line:80] - INFO: 用例--加标成功--执行通过
2020-04-18 16:38:33,785 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 16:38:33,968 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 16:38:34,166 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 16:38:34,326 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 16:38:34,507 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 16:38:34,679 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 16:38:34,874 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 16:38:35,032 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 16:38:35,208 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 16:38:35,404 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 16:39:23,322 -- [test_05add.py-->line:80] - INFO: 用例--加标成功--执行通过
2020-04-18 16:39:23,588 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 16:39:23,802 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 16:39:24,012 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 16:39:24,227 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 16:39:24,585 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 16:39:24,794 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 16:39:24,986 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 16:39:25,190 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 16:39:25,417 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 16:39:25,632 -- [test_05add.py-->line:80] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 16:40:26,861 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 16:40:27,142 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 16:40:27,367 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 16:40:27,553 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 16:40:27,777 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 16:40:28,017 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 16:40:28,240 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 16:40:28,434 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 16:40:28,635 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 16:40:28,844 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 16:40:29,075 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 16:51:29,058 -- [test_info.py-->line:62] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 16:53:25,967 -- [test_info.py-->line:62] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 16:54:23,388 -- [test_info.py-->line:62] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 16:55:42,744 -- [test_info.py-->line:55] - ERROR: 测试用例--获取单个会员信息成功--未通过
2020-04-18 16:55:42,744 -- [test_info.py-->line:56] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-18 16:55:42,744 -- [test_info.py-->line:57] - DEBUG: 实际结果：{'code': 1004, 'msg': 'No handler found for GET /futureloan/member/', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:55:42,744 -- [test_info.py-->line:58] - ERROR:  :: 0 != 1004
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_info.py", line 51, in test_find_userinfo
    self.assertEqual(expected["code"],res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1004
2020-04-18 16:55:43,088 -- [test_info.py-->line:55] - ERROR: 测试用例--获取单个会员信息失败-用户不存在--未通过
2020-04-18 16:55:43,088 -- [test_info.py-->line:56] - DEBUG: 预期结果：{'code': 2, 'msg': '会员不存在'}
2020-04-18 16:55:43,088 -- [test_info.py-->line:57] - DEBUG: 实际结果：{'code': 1004, 'msg': 'No handler found for GET /futureloan/member/', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:55:43,088 -- [test_info.py-->line:58] - ERROR:  :: 2 != 1004
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1004

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_info.py", line 51, in test_find_userinfo
    self.assertEqual(expected["code"],res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1004
2020-04-18 16:55:43,492 -- [test_info.py-->line:62] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 16:58:36,900 -- [test_info.py-->line:60] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 16:58:37,072 -- [test_info.py-->line:53] - ERROR: 测试用例--获取单个会员信息失败-用户不存在--未通过
2020-04-18 16:58:37,073 -- [test_info.py-->line:54] - DEBUG: 预期结果：{'code': 2, 'msg': '会员不存在'}
2020-04-18 16:58:37,073 -- [test_info.py-->line:55] - DEBUG: 实际结果：{'code': 2, 'msg': '用户不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 16:58:37,073 -- [test_info.py-->line:56] - ERROR:  :: 会员不存在 != 用户不存在
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '会员不存在' != '用户不存在'
- 会员不存在
+ 用户不存在


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_info.py", line 50, in test_find_userinfo
    self.assertEqual(expected["msg"],res["msg"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 会员不存在 != 用户不存在
2020-04-18 16:58:37,265 -- [test_info.py-->line:60] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 17:07:24,774 -- [test_loanslist.py-->line:52] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:07:24,774 -- [test_loanslist.py-->line:53] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:07:24,774 -- [test_loanslist.py-->line:54] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:07:24,775 -- [test_loanslist.py-->line:55] - ERROR:  :: 50 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 50 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 49, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 50 != 10
2020-04-18 17:09:57,488 -- [test_loanslist.py-->line:58] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:09:57,762 -- [test_loanslist.py-->line:52] - ERROR: 测试用例--获取项目列表成功-只填页面内容数--未通过
2020-04-18 17:09:57,762 -- [test_loanslist.py-->line:53] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-18 17:09:57,763 -- [test_loanslist.py-->line:54] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:09:57,763 -- [test_loanslist.py-->line:55] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 49, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-18 17:09:57,980 -- [test_loanslist.py-->line:52] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:09:57,980 -- [test_loanslist.py-->line:53] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:09:57,981 -- [test_loanslist.py-->line:54] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:09:57,981 -- [test_loanslist.py-->line:55] - ERROR:  :: 50 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 50 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 49, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 50 != 10
2020-04-18 17:15:37,269 -- [test_loanslist.py-->line:53] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:15:37,789 -- [test_loanslist.py-->line:47] - ERROR: 测试用例--获取项目列表成功-只填页面内容数--未通过
2020-04-18 17:15:37,789 -- [test_loanslist.py-->line:48] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-18 17:15:37,789 -- [test_loanslist.py-->line:49] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:15:37,789 -- [test_loanslist.py-->line:50] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 44, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-18 17:15:38,047 -- [test_loanslist.py-->line:47] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:15:38,047 -- [test_loanslist.py-->line:48] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:15:38,047 -- [test_loanslist.py-->line:49] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:15:38,047 -- [test_loanslist.py-->line:50] - ERROR:  :: 50 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 50 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 44, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 50 != 10
2020-04-18 17:18:55,301 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-只填页面参数--未通过
2020-04-18 17:18:55,301 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 10}
2020-04-18 17:18:55,302 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 1005, 'msg': "Request method 'PATCH' not supported", 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:18:55,302 -- [test_loanslist.py-->line:51] - ERROR:  :: 0 != 1005
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 42, in test_loans_list
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1005
2020-04-18 17:18:55,595 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-只填页面内容数--未通过
2020-04-18 17:18:55,595 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-18 17:18:55,595 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 1005, 'msg': "Request method 'PATCH' not supported", 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:18:55,595 -- [test_loanslist.py-->line:51] - ERROR:  :: 0 != 1005
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 42, in test_loans_list
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1005
2020-04-18 17:18:55,830 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:18:55,831 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:18:55,831 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 1005, 'msg': "Request method 'PATCH' not supported", 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:18:55,831 -- [test_loanslist.py-->line:51] - ERROR:  :: 0 != 1005
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1005

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 42, in test_loans_list
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1005
2020-04-18 17:20:22,221 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:20:22,439 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-只填页面内容数--未通过
2020-04-18 17:20:22,439 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-18 17:20:22,439 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:20:22,439 -- [test_loanslist.py-->line:51] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 45, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-18 17:20:22,672 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:20:22,672 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:20:22,672 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:20:22,673 -- [test_loanslist.py-->line:51] - ERROR:  :: 50 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 50 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 45, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 50 != 10
2020-04-18 17:22:33,186 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:22:33,500 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:22:33,717 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-只填页面内容数--未通过
2020-04-18 17:22:33,717 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-18 17:22:33,717 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:22:33,717 -- [test_loanslist.py-->line:51] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 45, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-18 17:22:33,936 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:22:33,936 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:22:33,936 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:22:33,937 -- [test_loanslist.py-->line:51] - ERROR:  :: 50 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 50 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 45, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 50 != 10
2020-04-18 17:26:38,951 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:26:39,626 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:26:40,917 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-只填页面内容数--未通过
2020-04-18 17:26:40,917 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-18 17:26:40,917 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:26:40,917 -- [test_loanslist.py-->line:51] - ERROR:  :: 20 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 45, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 20 != 10
2020-04-18 17:26:41,162 -- [test_loanslist.py-->line:48] - ERROR: 测试用例--获取项目列表成功-都填参数--未通过
2020-04-18 17:26:41,162 -- [test_loanslist.py-->line:49] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'len': 50}
2020-04-18 17:26:41,162 -- [test_loanslist.py-->line:50] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:26:41,162 -- [test_loanslist.py-->line:51] - ERROR:  :: 50 != 10
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 50 != 10

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_loanslist.py", line 45, in test_loans_list
    self.assertEqual(expected["len"], len(res["data"]))
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 50 != 10
2020-04-18 17:31:55,254 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:38:03,649 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:38:03,914 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:38:04,131 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 17:38:04,238 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 17:38:34,687 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:38:35,118 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:38:35,349 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 17:38:35,611 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 17:40:15,104 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 17:40:17,636 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 17:40:18,558 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 17:40:19,580 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 17:40:20,535 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 17:40:21,484 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 17:40:22,449 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 17:40:22,817 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 17:40:23,240 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 17:40:23,471 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 17:40:23,739 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 17:40:23,998 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 17:40:24,224 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 17:40:24,615 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 17:40:25,077 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 17:40:25,282 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 17:40:25,283 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 17:40:25,283 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:25,283 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 17:40:25,521 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 17:40:25,521 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 17:40:25,521 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:25,521 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 17:40:25,931 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 17:40:26,310 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 17:40:27,211 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 17:40:27,399 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 17:40:27,628 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 17:40:27,628 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 17:40:27,628 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199702.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:27,629 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 17:40:27,894 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 17:40:27,895 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:40:27,895 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199702.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:27,895 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 17:40:28,190 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 17:40:28,190 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:40:28,190 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:28,190 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 17:40:28,413 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 17:40:28,413 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 17:40:28,413 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:28,413 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 17:40:28,627 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 17:40:28,627 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 17:40:28,627 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:28,627 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 17:40:29,082 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 17:40:29,082 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:40:29,082 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:40:29,082 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 17:40:29,315 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 17:40:30,186 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 17:40:30,354 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 17:40:30,549 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 17:40:30,799 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 17:40:30,971 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 17:40:31,152 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 17:40:31,329 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 17:40:31,537 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 17:40:31,760 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 17:40:31,936 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 17:40:32,147 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 17:40:32,939 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 17:40:33,199 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 17:40:33,528 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 17:40:33,732 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:40:33,983 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:40:34,184 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 17:40:34,357 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 17:40:34,434 -- [run_test.py-->line:38] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 17:50:44,292 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 17:50:46,587 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 17:50:47,532 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 17:50:48,449 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 17:50:49,369 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 17:50:50,351 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 17:50:51,304 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 17:50:51,508 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 17:50:51,696 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 17:50:51,892 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 17:50:52,069 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 17:50:52,245 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 17:50:52,415 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 17:50:52,778 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 17:50:53,125 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 17:50:53,309 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 17:50:53,309 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 17:50:53,309 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:53,310 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 17:50:53,519 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 17:50:53,519 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 17:50:53,519 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:53,519 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 17:50:53,859 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 17:50:54,257 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 17:50:54,738 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 17:50:54,941 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 17:50:55,189 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 17:50:55,190 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 17:50:55,190 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199802.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:55,190 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 17:50:55,497 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 17:50:55,497 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:50:55,497 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 199802.88, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:55,497 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 17:50:55,705 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 17:50:55,705 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:50:55,705 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:55,705 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 17:50:55,886 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 17:50:55,886 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 17:50:55,886 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:55,886 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 17:50:56,061 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 17:50:56,062 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 17:50:56,062 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:56,062 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 17:50:56,249 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 17:50:56,249 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:50:56,250 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:50:56,250 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 17:50:56,422 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 17:50:57,330 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 17:50:57,561 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 17:50:57,812 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 17:50:57,995 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 17:50:58,174 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 17:50:58,407 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 17:50:58,624 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 17:50:59,259 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 17:50:59,888 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 17:51:00,097 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 17:51:00,401 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 17:51:01,208 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 17:51:01,797 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 17:51:02,017 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 17:51:02,245 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:51:02,420 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:51:02,598 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 17:51:02,839 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 17:51:02,916 -- [run_test.py-->line:38] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 17:55:23,605 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 17:55:25,830 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 17:55:26,742 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 17:55:27,647 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 17:55:29,615 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 17:56:33,377 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 17:56:35,613 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 17:56:36,604 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 17:56:37,349 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 17:56:38,170 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 17:56:39,067 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 17:56:40,055 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 17:56:40,300 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 17:56:40,498 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 17:56:40,696 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 17:56:40,919 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 17:56:41,128 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 17:56:41,342 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 17:56:41,699 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 17:56:42,115 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 17:56:42,289 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 17:56:42,289 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 17:56:42,290 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:42,290 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 17:56:42,512 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 17:56:42,512 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 17:56:42,512 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:42,512 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 17:56:43,018 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 17:56:43,460 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 17:56:44,219 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 17:56:44,617 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-18 17:56:45,095 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-18 17:56:45,523 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-18 17:56:45,743 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 17:56:45,963 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 17:56:46,195 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 17:56:46,196 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 17:56:46,196 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 700204.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:46,196 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 17:56:46,428 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 17:56:46,428 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:56:46,428 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 700204.14, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:46,428 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 17:56:46,677 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 17:56:46,677 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:56:46,677 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:46,677 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 17:56:46,891 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 17:56:46,891 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 17:56:46,891 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:46,892 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 17:56:47,141 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 17:56:47,142 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 17:56:47,142 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:47,142 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 17:56:47,360 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 17:56:47,360 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 17:56:47,361 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 17:56:47,361 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 17:56:47,741 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 17:56:49,170 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 17:56:49,382 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 17:56:49,780 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 17:56:50,373 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 17:56:50,605 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 17:56:50,858 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 17:56:51,085 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 17:56:51,339 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 17:56:51,571 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 17:56:51,893 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 17:56:52,097 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 17:56:52,980 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 17:56:53,200 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 17:56:53,420 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 17:56:53,682 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 17:56:54,004 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 17:56:54,205 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 17:56:54,408 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 17:56:54,511 -- [run_test.py-->line:38] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 18:26:56,926 -- [test_06audit.py-->line:101] - ERROR: 用例--审核通过--执行未通过
2020-04-18 18:26:57,023 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'status': 2}
2020-04-18 18:26:57,023 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:26:57,024 -- [test_06audit.py-->line:104] - ERROR:  :: 0 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1003
2020-04-18 18:26:57,376 -- [test_06audit.py-->line:101] - ERROR: 用例--审核不通过--执行未通过
2020-04-18 18:26:57,377 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'status': 5}
2020-04-18 18:26:57,377 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:26:57,377 -- [test_06audit.py-->line:104] - ERROR:  :: 0 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1003
2020-04-18 18:26:57,885 -- [test_06audit.py-->line:101] - ERROR: 用例--参数approved_or_not为空--执行未通过
2020-04-18 18:26:57,885 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 1, 'msg': 'approved_or_not为空'}
2020-04-18 18:26:57,885 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:26:57,885 -- [test_06audit.py-->line:104] - ERROR:  :: 1 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 1003
2020-04-18 18:26:58,205 -- [test_06audit.py-->line:101] - ERROR: 用例--项目id为空--执行未通过
2020-04-18 18:26:58,206 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 1, 'msg': '项目id为空'}
2020-04-18 18:26:58,206 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:26:58,206 -- [test_06audit.py-->line:104] - ERROR:  :: 1 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 1003
2020-04-18 18:26:58,624 -- [test_06audit.py-->line:101] - ERROR: 用例--项目id不存在--执行未通过
2020-04-18 18:26:58,624 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 2, 'msg': '项目不存在'}
2020-04-18 18:26:58,624 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:26:58,624 -- [test_06audit.py-->line:104] - ERROR:  :: 2 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1003
2020-04-18 18:27:24,872 -- [test_06audit.py-->line:101] - ERROR: 用例--审核通过--执行未通过
2020-04-18 18:27:24,872 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'status': 2}
2020-04-18 18:27:24,873 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:27:24,873 -- [test_06audit.py-->line:104] - ERROR:  :: 0 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1003
2020-04-18 18:27:25,269 -- [test_06audit.py-->line:101] - ERROR: 用例--审核不通过--执行未通过
2020-04-18 18:27:25,269 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK', 'status': 5}
2020-04-18 18:27:25,270 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:27:25,270 -- [test_06audit.py-->line:104] - ERROR:  :: 0 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1003
2020-04-18 18:27:26,097 -- [test_06audit.py-->line:101] - ERROR: 用例--参数approved_or_not为空--执行未通过
2020-04-18 18:27:26,098 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 1, 'msg': 'approved_or_not为空'}
2020-04-18 18:27:26,098 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:27:26,098 -- [test_06audit.py-->line:104] - ERROR:  :: 1 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 1003
2020-04-18 18:27:26,451 -- [test_06audit.py-->line:101] - ERROR: 用例--项目id为空--执行未通过
2020-04-18 18:27:26,451 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 1, 'msg': '项目id为空'}
2020-04-18 18:27:26,451 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:27:26,451 -- [test_06audit.py-->line:104] - ERROR:  :: 1 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 1003
2020-04-18 18:27:26,966 -- [test_06audit.py-->line:101] - ERROR: 用例--项目id不存在--执行未通过
2020-04-18 18:27:26,966 -- [test_06audit.py-->line:102] - DEBUG: 预期结果：{'code': 2, 'msg': '项目不存在'}
2020-04-18 18:27:26,966 -- [test_06audit.py-->line:103] - DEBUG: 实际结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '未授权或token已过期'}
2020-04-18 18:27:26,966 -- [test_06audit.py-->line:104] - ERROR:  :: 2 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_06audit.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1003
2020-04-18 18:51:51,301 -- [test_06audit.py-->line:107] - INFO: 用例--审核不通过--执行通过
2020-04-18 18:51:53,149 -- [test_06audit.py-->line:107] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 18:51:53,457 -- [test_06audit.py-->line:107] - INFO: 用例--项目id为空--执行通过
2020-04-18 18:51:53,876 -- [test_06audit.py-->line:107] - INFO: 用例--项目id不存在--执行通过
2020-04-18 18:54:25,414 -- [test_06audit.py-->line:107] - INFO: 用例--审核通过--执行通过
2020-04-18 18:54:25,726 -- [test_06audit.py-->line:107] - INFO: 用例--审核不通过--执行通过
2020-04-18 18:54:26,228 -- [test_06audit.py-->line:107] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-18 18:54:26,628 -- [test_06audit.py-->line:107] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 18:54:27,514 -- [test_06audit.py-->line:107] - INFO: 用例--项目id为空--执行通过
2020-04-18 18:54:28,012 -- [test_06audit.py-->line:107] - INFO: 用例--项目id不存在--执行通过
2020-04-18 18:56:27,453 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 18:56:31,780 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 18:56:32,855 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 18:56:33,820 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 18:56:34,798 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 18:56:35,800 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 18:56:36,790 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 18:56:37,013 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 18:56:37,314 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 18:56:37,582 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 18:56:37,816 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 18:56:38,091 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 18:56:38,351 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 18:56:38,764 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 18:56:39,414 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 18:56:39,648 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 18:56:39,648 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 18:56:39,648 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:39,648 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 18:56:39,991 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 18:56:39,992 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 18:56:39,993 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:39,993 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 18:56:40,432 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 18:56:40,892 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 18:56:41,803 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 18:56:42,278 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-18 18:56:42,880 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-18 18:56:43,385 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-18 18:56:43,693 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 18:56:44,076 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 18:56:44,397 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 18:56:44,398 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 18:56:44,398 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1200605.4, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:44,398 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:56:44,673 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 18:56:44,673 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 18:56:44,673 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 1200605.4, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:44,673 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:56:44,872 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 18:56:44,872 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 18:56:44,872 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:44,872 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 18:56:45,107 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 18:56:45,107 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 18:56:45,107 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:45,108 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 18:56:45,340 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 18:56:45,340 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 18:56:45,340 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:45,340 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 18:56:45,563 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 18:56:45,563 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 18:56:45,563 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:45,563 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 18:56:45,795 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 18:56:46,577 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-18 18:56:47,000 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-18 18:56:47,456 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-18 18:56:47,839 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-18 18:56:48,042 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-18 18:56:48,253 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-18 18:56:48,462 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-18 18:56:48,462 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 18:56:48,462 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 550005.08, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:48,462 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:56:48,723 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-18 18:56:48,985 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-18 18:56:48,985 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 18:56:48,986 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 550005.08, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:48,986 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:56:49,309 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-18 18:56:49,309 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 18:56:49,309 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:49,309 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 18:56:49,525 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-18 18:56:49,525 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-18 18:56:49,525 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:49,525 -- [test_04withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-18 18:56:49,762 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-18 18:56:49,763 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-18 18:56:49,763 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:49,763 -- [test_04withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-18 18:56:50,003 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-18 18:56:50,003 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 18:56:50,003 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:50,004 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 18:56:50,230 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-18 18:56:50,799 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-18 18:56:50,799 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-18 18:56:50,800 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 50005.08, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:56:50,800 -- [test_04withdraw.py-->line:80] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-04-18 18:56:51,689 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 18:56:51,946 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 18:56:52,142 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 18:56:52,343 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 18:56:52,534 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 18:56:52,732 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 18:56:52,941 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 18:56:53,145 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 18:56:53,394 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 18:56:53,676 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 18:56:53,970 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 18:56:54,592 -- [test_06audit.py-->line:107] - INFO: 用例--审核通过--执行通过
2020-04-18 18:56:55,141 -- [test_06audit.py-->line:107] - INFO: 用例--审核不通过--执行通过
2020-04-18 18:56:55,498 -- [test_06audit.py-->line:107] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-18 18:56:55,851 -- [test_06audit.py-->line:107] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 18:56:56,221 -- [test_06audit.py-->line:107] - INFO: 用例--项目id为空--执行通过
2020-04-18 18:56:56,670 -- [test_06audit.py-->line:107] - INFO: 用例--项目id不存在--执行通过
2020-04-18 18:56:56,897 -- [test_07invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-18 18:56:57,199 -- [test_07invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-18 18:56:57,417 -- [test_07invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-18 18:56:57,647 -- [test_07invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-18 18:56:58,020 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-18 18:56:58,251 -- [test_07invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 18:56:58,485 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-18 18:56:58,820 -- [test_07invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-18 18:56:59,270 -- [test_07invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-18 18:56:59,507 -- [test_07invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-18 18:56:59,960 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 18:57:00,176 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 18:57:00,552 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 18:57:00,827 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 18:57:01,052 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 18:57:01,327 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 18:57:01,573 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 18:57:02,145 -- [test_update.py-->line:71] - INFO: 用例--更新失败-会员id为空--执行通过
2020-04-18 18:57:02,390 -- [test_update.py-->line:71] - INFO: 用例--更新失败-昵称为空--执行通过
2020-04-18 18:57:02,596 -- [test_update.py-->line:71] - INFO: 用例--更新失败-昵称大于10位--执行通过
2020-04-18 18:57:02,806 -- [test_update.py-->line:71] - INFO: 用例--更新失败-用户不存在--执行通过
2020-04-18 18:57:03,027 -- [test_update.py-->line:71] - INFO: 用例--更新失败-用户无访问权限--执行通过
2020-04-18 18:57:03,126 -- [run_test.py-->line:38] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 18:58:18,528 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 18:58:21,063 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 18:58:22,081 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 18:58:23,214 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 18:58:24,261 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 18:58:25,395 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 18:58:26,367 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 18:58:26,932 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 18:58:27,361 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 18:58:27,792 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 18:58:28,240 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 18:58:28,830 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 18:58:29,158 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 18:58:29,582 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 18:58:30,022 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 18:58:30,273 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 18:58:30,273 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 18:58:30,273 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:30,273 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 18:58:30,544 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 18:58:30,544 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 18:58:30,544 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:30,544 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 18:58:31,008 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 18:58:31,427 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 18:58:32,194 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 18:58:32,617 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-18 18:58:33,219 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-18 18:58:33,696 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-18 18:58:34,001 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 18:58:34,367 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 18:58:34,662 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 18:58:34,662 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 18:58:34,662 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 550406.34, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:34,662 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:58:34,959 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 18:58:34,960 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 18:58:34,960 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 550406.34, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:34,960 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:58:35,268 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 18:58:35,268 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 18:58:35,268 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:35,268 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 18:58:35,533 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 18:58:35,533 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 18:58:35,533 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:35,533 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 18:58:35,763 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 18:58:35,763 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 18:58:35,764 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:35,764 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 18:58:36,034 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 18:58:36,034 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 18:58:36,034 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:36,034 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 18:58:36,281 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 18:58:36,982 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-18 18:58:37,671 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-18 18:58:38,537 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-18 18:58:39,336 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现成功-50万--执行未通过
2020-04-18 18:58:39,337 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-18 18:58:39,337 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:39,337 -- [test_04withdraw.py-->line:80] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-18 18:58:39,599 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-18 18:58:39,853 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-18 18:58:40,105 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-18 18:58:40,106 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 18:58:40,106 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 399806.02, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:40,106 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:58:40,435 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-18 18:58:40,781 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-18 18:58:40,781 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 18:58:40,781 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 399806.02, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:40,781 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 18:58:41,106 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-18 18:58:41,106 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 18:58:41,106 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:41,106 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 18:58:41,395 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-18 18:58:41,395 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-18 18:58:41,396 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:41,396 -- [test_04withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-18 18:58:41,655 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-18 18:58:41,655 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-18 18:58:41,655 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:41,655 -- [test_04withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-18 18:58:41,963 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-18 18:58:41,963 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 18:58:41,964 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:41,964 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 18:58:42,164 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-18 18:58:42,690 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-18 18:58:42,691 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-18 18:58:42,691 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 18:58:42,691 -- [test_04withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-18 18:58:43,801 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 18:58:44,351 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 18:58:44,546 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 18:58:44,787 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 18:58:45,090 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 18:58:45,381 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 18:58:45,591 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 18:58:45,830 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 18:58:46,129 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 18:58:46,325 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 18:58:46,543 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 18:58:47,441 -- [test_06audit.py-->line:107] - INFO: 用例--审核通过--执行通过
2020-04-18 18:58:48,152 -- [test_06audit.py-->line:107] - INFO: 用例--审核不通过--执行通过
2020-04-18 18:58:48,811 -- [test_06audit.py-->line:107] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-18 18:58:49,203 -- [test_06audit.py-->line:107] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 18:58:49,856 -- [test_06audit.py-->line:107] - INFO: 用例--项目id为空--执行通过
2020-04-18 18:58:50,280 -- [test_06audit.py-->line:107] - INFO: 用例--项目id不存在--执行通过
2020-04-18 18:58:50,518 -- [test_07invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-18 18:58:50,755 -- [test_07invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-18 18:58:50,995 -- [test_07invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-18 18:58:51,319 -- [test_07invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-18 18:58:51,689 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-18 18:58:51,907 -- [test_07invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 18:58:52,189 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-18 18:58:52,402 -- [test_07invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-18 18:58:52,620 -- [test_07invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-18 18:58:53,093 -- [test_07invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-18 18:58:53,910 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 18:58:54,312 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 18:58:54,602 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 18:58:54,823 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 18:58:55,052 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 18:58:55,281 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 18:58:55,604 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 19:00:32,265 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 19:00:34,729 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 19:00:35,692 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 19:00:36,689 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 19:00:37,731 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 19:00:38,624 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 19:00:39,522 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 19:00:39,723 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 19:00:39,949 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 19:00:40,169 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 19:00:40,384 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 19:00:40,598 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 19:00:40,816 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 19:00:41,254 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 19:00:41,634 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 19:00:41,832 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 19:00:41,832 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 19:00:41,832 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:41,832 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 19:00:42,063 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 19:00:42,063 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 19:00:42,063 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:42,063 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 19:00:42,422 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 19:00:42,840 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 19:00:43,593 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 19:00:44,040 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-18 19:00:44,507 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-18 19:00:44,960 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-18 19:00:45,234 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 19:00:45,464 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 19:00:45,687 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 19:00:45,688 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 19:00:45,688 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 900207.28, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:45,688 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:00:45,903 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 19:00:45,904 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 19:00:45,904 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 900207.28, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:45,904 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:00:46,166 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 19:00:46,166 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 19:00:46,166 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:46,166 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 19:00:46,400 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 19:00:46,400 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 19:00:46,400 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:46,400 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 19:00:46,633 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 19:00:46,633 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 19:00:46,633 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:46,633 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 19:00:47,061 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 19:00:47,061 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 19:00:47,061 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:47,062 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 19:00:47,453 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 19:00:48,139 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-18 19:00:48,590 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-18 19:00:49,253 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-18 19:00:49,963 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-18 19:00:50,224 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-18 19:00:50,475 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-18 19:00:50,766 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-18 19:00:50,766 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 19:00:50,766 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 249606.96, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:50,766 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:00:50,983 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-18 19:00:51,284 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-18 19:00:51,284 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 19:00:51,284 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 249606.96, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:51,285 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:00:51,531 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-18 19:00:51,532 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 19:00:51,532 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:51,532 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 19:00:51,848 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-18 19:00:51,848 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-18 19:00:51,848 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:51,848 -- [test_04withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-18 19:00:52,097 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-18 19:00:52,097 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-18 19:00:52,098 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:52,098 -- [test_04withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-18 19:00:52,370 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-18 19:00:52,370 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 19:00:52,370 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:52,371 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 19:00:52,688 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-18 19:00:53,165 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-18 19:00:53,165 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-18 19:00:53,165 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:00:53,165 -- [test_04withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-18 19:00:54,141 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 19:00:54,452 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 19:00:54,679 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 19:00:54,952 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 19:00:55,189 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 19:00:55,441 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 19:00:55,682 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 19:00:56,073 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 19:00:56,454 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 19:00:56,761 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 19:00:57,172 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 19:00:58,184 -- [test_06audit.py-->line:107] - INFO: 用例--审核通过--执行通过
2020-04-18 19:00:58,665 -- [test_06audit.py-->line:107] - INFO: 用例--审核不通过--执行通过
2020-04-18 19:00:59,065 -- [test_06audit.py-->line:107] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-18 19:00:59,574 -- [test_06audit.py-->line:107] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 19:01:00,222 -- [test_06audit.py-->line:107] - INFO: 用例--项目id为空--执行通过
2020-04-18 19:01:00,666 -- [test_06audit.py-->line:107] - INFO: 用例--项目id不存在--执行通过
2020-04-18 19:01:00,986 -- [test_07invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-18 19:01:01,235 -- [test_07invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-18 19:01:01,448 -- [test_07invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-18 19:01:01,665 -- [test_07invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-18 19:01:02,045 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-18 19:01:02,348 -- [test_07invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 19:01:02,677 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-18 19:01:03,053 -- [test_07invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-18 19:01:03,427 -- [test_07invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-18 19:01:03,631 -- [test_07invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-18 19:01:04,170 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 19:01:04,467 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 19:01:04,699 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 19:01:04,978 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 19:01:05,240 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 19:01:05,436 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 19:01:05,659 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 19:01:06,004 -- [test_update.py-->line:72] - INFO: 用例--更新失败-会员id为空--执行通过
2020-04-18 19:01:06,245 -- [test_update.py-->line:72] - INFO: 用例--更新失败-昵称为空--执行通过
2020-04-18 19:01:06,519 -- [test_update.py-->line:72] - INFO: 用例--更新失败-昵称大于10位--执行通过
2020-04-18 19:01:06,791 -- [test_update.py-->line:72] - INFO: 用例--更新失败-用户不存在--执行通过
2020-04-18 19:01:07,081 -- [test_update.py-->line:72] - INFO: 用例--更新失败-用户无访问权限--执行通过
2020-04-18 19:01:07,182 -- [run_test.py-->line:38] - INFO: --------------------测试用例执行结束--------------------
2020-04-18 19:01:43,017 -- [run_test.py-->line:15] - INFO: --------------------测试用例开始执行--------------------
2020-04-18 19:01:45,364 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-18 19:01:46,372 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-18 19:01:47,294 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-18 19:01:48,194 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-18 19:01:49,148 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-18 19:01:50,086 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-18 19:01:50,356 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-18 19:01:50,646 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-18 19:01:50,858 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-18 19:01:51,132 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-18 19:01:51,350 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-18 19:01:51,586 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-18 19:01:51,977 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-18 19:01:52,459 -- [test_02login.py-->line:58] - INFO: 用例--登录成功--执行通过
2020-04-18 19:01:52,844 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-18 19:01:52,844 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-18 19:01:52,844 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:52,844 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 19:01:53,037 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-18 19:01:53,037 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-18 19:01:53,037 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:53,037 -- [test_02login.py-->line:55] - ERROR: 1 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-18 19:01:53,489 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-18 19:01:53,960 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-18 19:01:54,639 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 19:01:55,067 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-18 19:01:55,460 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-18 19:01:55,836 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-18 19:01:56,057 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-18 19:01:56,350 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-18 19:01:56,643 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-18 19:01:56,643 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 19:01:56,644 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 750008.22, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:56,644 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:01:56,861 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-18 19:01:56,861 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 19:01:56,861 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 750008.22, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:56,861 -- [test_03recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:01:57,148 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-18 19:01:57,148 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 19:01:57,148 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:57,148 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 19:01:57,375 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-18 19:01:57,375 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-18 19:01:57,375 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:57,375 -- [test_03recharge.py-->line:81] - ERROR: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空

2020-04-18 19:01:57,653 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-18 19:01:57,653 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-18 19:01:57,653 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:57,653 -- [test_03recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-18 19:01:57,899 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-18 19:01:57,900 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-18 19:01:57,900 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:01:57,900 -- [test_03recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-18 19:01:58,109 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
2020-04-18 19:01:58,867 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-整数--执行通过
2020-04-18 19:01:59,330 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-18 19:01:59,733 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-18 19:02:00,139 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现成功-50万--执行通过
2020-04-18 19:02:00,364 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为空--执行通过
2020-04-18 19:02:00,744 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id不存在--执行通过
2020-04-18 19:02:01,036 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-会员id为字符串--执行未通过
2020-04-18 19:02:01,037 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-18 19:02:01,037 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 99407.9, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:01,037 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:02:01,253 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-会员id为小数--执行通过
2020-04-18 19:02:01,490 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为0--执行未通过
2020-04-18 19:02:01,491 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 19:02:01,491 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 99407.9, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:01,491 -- [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-18 19:02:01,714 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为负数--执行未通过
2020-04-18 19:02:01,714 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 19:02:01,715 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:01,715 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 19:02:02,002 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额为空--执行未通过
2020-04-18 19:02:02,002 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '提现金额为空'}
2020-04-18 19:02:02,002 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:02,003 -- [test_04withdraw.py-->line:80] - ERROR: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金额为空' != '余额为空'
- 提现金额为空
+ 余额为空

2020-04-18 19:02:02,323 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-3位小数--执行未通过
2020-04-18 19:02:02,323 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金小数超过两位'}
2020-04-18 19:02:02,323 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:02,324 -- [test_04withdraw.py-->line:80] - ERROR: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金小数超过两位' != '余额小数超过两位'
- 提现金小数超过两位
+ 余额小数超过两位

2020-04-18 19:02:02,616 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-提现金额-大于50万--执行未通过
2020-04-18 19:02:02,616 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '提现金必须大于0并且小于或者等于500000'}
2020-04-18 19:02:02,617 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:02,617 -- [test_04withdraw.py-->line:80] - ERROR: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '提现金必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 提现金必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于5000000
? ^^                   +

2020-04-18 19:02:02,863 -- [test_04withdraw.py-->line:85] - INFO: 用例--提现失败-提现金额-非数字--执行通过
2020-04-18 19:02:03,340 -- [test_04withdraw.py-->line:77] - ERROR: 用例--提现失败-余额不足--执行未通过
2020-04-18 19:02:03,340 -- [test_04withdraw.py-->line:78] - DEBUG: 预期结果：{'code': 1002, 'msg': '账户余额不足'}
2020-04-18 19:02:03,341 -- [test_04withdraw.py-->line:79] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:03,341 -- [test_04withdraw.py-->line:80] - ERROR: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_04withdraw.py", line 68, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '账户余额不足' != '余额不足'
- 账户余额不足
? --
+ 余额不足

2020-04-18 19:02:04,599 -- [test_05add.py-->line:78] - INFO: 用例--加标成功--执行通过
2020-04-18 19:02:04,916 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id为空--执行通过
2020-04-18 19:02:05,316 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—标题为空--执行通过
2020-04-18 19:02:06,145 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为空--执行通过
2020-04-18 19:02:06,811 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—年利率为空--执行通过
2020-04-18 19:02:07,062 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限为空--执行通过
2020-04-18 19:02:07,309 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款期限类型为空--执行通过
2020-04-18 19:02:07,590 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—竞标天数为空--执行通过
2020-04-18 19:02:07,912 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款人id不是当前登录用户--执行通过
2020-04-18 19:02:08,232 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为负数--执行通过
2020-04-18 19:02:08,514 -- [test_05add.py-->line:78] - INFO: 用例--加标失败—借款金额为小数--执行通过
2020-04-18 19:02:09,448 -- [test_06audit.py-->line:107] - INFO: 用例--审核通过--执行通过
2020-04-18 19:02:09,915 -- [test_06audit.py-->line:107] - INFO: 用例--审核不通过--执行通过
2020-04-18 19:02:10,241 -- [test_06audit.py-->line:107] - INFO: 用例--项目不是待审核状态--执行通过
2020-04-18 19:02:10,705 -- [test_06audit.py-->line:107] - INFO: 用例--参数approved_or_not为空--执行通过
2020-04-18 19:02:11,177 -- [test_06audit.py-->line:107] - INFO: 用例--项目id为空--执行通过
2020-04-18 19:02:11,656 -- [test_06audit.py-->line:107] - INFO: 用例--项目id不存在--执行通过
2020-04-18 19:02:11,944 -- [test_07invest.py-->line:57] - INFO: 用例--借款人正常登录--执行通过
2020-04-18 19:02:12,261 -- [test_07invest.py-->line:57] - INFO: 用例--借款人加标--执行通过
2020-04-18 19:02:12,743 -- [test_07invest.py-->line:57] - INFO: 用例--管理员正常登录--执行通过
2020-04-18 19:02:13,042 -- [test_07invest.py-->line:57] - INFO: 用例--管理员审核--执行通过
2020-04-18 19:02:13,438 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常登录--执行通过
2020-04-18 19:02:13,835 -- [test_07invest.py-->line:57] - INFO: 用例--充值成功-整数--执行通过
2020-04-18 19:02:14,053 -- [test_07invest.py-->line:57] - INFO: 用例--投资人正常投资--执行通过
2020-04-18 19:02:14,383 -- [test_07invest.py-->line:57] - INFO: 用例--投资人id为空--执行通过
2020-04-18 19:02:14,582 -- [test_07invest.py-->line:57] - INFO: 用例--标id为空--执行通过
2020-04-18 19:02:14,839 -- [test_07invest.py-->line:57] - INFO: 用例--投资金额为空--执行通过
2020-04-18 19:02:15,413 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息成功--通过
2020-04-18 19:02:15,650 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-用户不存在--通过
2020-04-18 19:02:15,937 -- [test_info.py-->line:61] - INFO: 测试用例--获取单个会员信息失败-无权限访问--通过
2020-04-18 19:02:16,168 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-不填参数--通过
2020-04-18 19:02:16,375 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面参数--通过
2020-04-18 19:02:16,600 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-只填页面内容数--通过
2020-04-18 19:02:16,833 -- [test_loanslist.py-->line:54] - INFO: 测试用例--获取项目列表成功-都填参数--通过
2020-04-18 19:02:17,206 -- [test_update.py-->line:66] - ERROR: 用例--{}--执行未通过
2020-04-18 19:02:17,206 -- [test_update.py-->line:67] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-18 19:02:17,206 -- [test_update.py-->line:68] - DEBUG: 实际结果：{'code': 2, 'msg': '用户昵称长度超过10位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-18 19:02:17,206 -- [test_update.py-->line:70] - ERROR: 0 != 2
Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_update.py", line 57, in test_update_regname
    self.assertEqual(expected["code"], res["code"])
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-18 19:02:17,432 -- [test_update.py-->line:72] - INFO: 用例--更新失败-会员id为空--执行通过
2020-04-18 19:02:17,750 -- [test_update.py-->line:72] - INFO: 用例--更新失败-昵称为空--执行通过
2020-04-18 19:02:17,955 -- [test_update.py-->line:72] - INFO: 用例--更新失败-昵称大于10位--执行通过
2020-04-18 19:02:18,151 -- [test_update.py-->line:72] - INFO: 用例--更新失败-用户不存在--执行通过
2020-04-18 19:02:18,363 -- [test_update.py-->line:72] - INFO: 用例--更新失败-用户无访问权限--执行通过
2020-04-18 19:02:18,463 -- [run_test.py-->line:38] - INFO: --------------------测试用例执行结束--------------------
2020-04-20 20:29:27,371 -- [test_01register.py-->line:70] - INFO: 用例--注册管理员成功--执行通过
2020-04-20 20:29:28,445 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型传值，注册名传值--执行通过
2020-04-20 20:29:29,449 -- [test_01register.py-->line:70] - INFO: 用例--注册普通会员成功-类型默认，注册名默认--执行通过
2020-04-20 20:29:30,472 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于8位--执行通过
2020-04-20 20:29:31,501 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-密码长度等于16位--执行通过
2020-04-20 20:29:32,493 -- [test_01register.py-->line:70] - INFO: 用例--注册成功-注册名长度等于10位--执行通过
2020-04-20 20:29:32,724 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号为空--执行通过
2020-04-20 20:29:32,940 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码为空--执行通过
2020-04-20 20:29:33,181 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度小于8位--执行通过
2020-04-20 20:29:33,391 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-密码长度大于16位--执行通过
2020-04-20 20:29:33,594 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-注册名长度大于10位--执行通过
2020-04-20 20:29:33,802 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-手机号不符合规范--执行通过
2020-04-20 20:29:34,181 -- [test_01register.py-->line:70] - INFO: 用例--注册失败-会员已存在--执行通过
2020-04-20 20:29:57,926 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-用户名为空--执行未通过
2020-04-20 20:29:57,927 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '手机号码为空'}
2020-04-20 20:29:57,927 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:29:58,018 -- [test_02login.py-->line:55] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-20 20:29:58,221 -- [test_02login.py-->line:51] - ERROR: 用例--登录失败-密码为空--执行未通过
2020-04-20 20:29:58,221 -- [test_02login.py-->line:52] - DEBUG: 预期结果：{'code': 1, 'msg': '密码为空'}
2020-04-20 20:29:58,221 -- [test_02login.py-->line:53] - DEBUG: 实际结果：{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:29:58,221 -- [test_02login.py-->line:55] - ERROR:  :: 1 != 2
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_02login.py", line 47, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 2
2020-04-20 20:29:58,590 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-用户名不存在--执行通过
2020-04-20 20:29:59,070 -- [test_02login.py-->line:58] - INFO: 用例--登录失败-密码错误--执行通过
2020-04-20 20:30:37,680 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-整数--执行通过
2020-04-20 20:30:38,123 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-金额等于50万--执行通过
2020-04-20 20:30:38,598 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-1位小数--执行通过
2020-04-20 20:30:39,288 -- [test_03recharge.py-->line:84] - INFO: 用例--充值成功-2位小数--执行通过
2020-04-20 20:30:39,481 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-会员id为空--执行通过
2020-04-20 20:30:39,846 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-id不是当前登录用户--执行通过
2020-04-20 20:30:40,106 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-会员id为字符串--执行未通过
2020-04-20 20:30:40,106 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-20 20:30:40,106 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 599809.16, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:30:40,106 -- [test_03recharge.py-->line:81] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-20 20:30:40,404 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为0--执行未通过
2020-04-20 20:30:40,404 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-20 20:30:40,404 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 7979396, 'leave_amount': 599809.16, 'mobile_phone': '18851288298', 'reg_name': '薄咊其实真的很厉害呀', 'reg_time': '2020-03-30 03:27:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:30:40,404 -- [test_03recharge.py-->line:81] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 68, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-20 20:30:40,592 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为负数--执行未通过
2020-04-20 20:30:40,592 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-20 20:30:40,592 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:30:40,593 -- [test_03recharge.py-->line:81] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-20 20:30:40,790 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额为空--执行未通过
2020-04-20 20:30:40,790 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 1, 'msg': '充值金额为空'}
2020-04-20 20:30:40,790 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 1, 'msg': '余额为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:30:40,790 -- [test_03recharge.py-->line:81] - ERROR:  :: 充值金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额为空' != '余额为空'
- 充值金额为空
+ 余额为空


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 充值金额为空 != 余额为空
2020-04-20 20:30:41,007 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-3位小数--执行未通过
2020-04-20 20:30:41,007 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额小数超过两位'}
2020-04-20 20:30:41,007 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:30:41,007 -- [test_03recharge.py-->line:81] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-04-20 20:30:41,195 -- [test_03recharge.py-->line:77] - ERROR: 用例--充值失败-充值金额大于50万--执行未通过
2020-04-20 20:30:41,195 -- [test_03recharge.py-->line:78] - DEBUG: 预期结果：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-20 20:30:41,196 -- [test_03recharge.py-->line:79] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-20 20:30:41,196 -- [test_03recharge.py-->line:81] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\PythonPro\bohe_api_test\testcases\test_03recharge.py", line 69, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.3.4\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于500000
2020-04-20 20:30:41,412 -- [test_03recharge.py-->line:84] - INFO: 用例--充值失败-充值金额非数字--执行通过
